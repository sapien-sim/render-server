// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: render_server.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_render_5fserver_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_render_5fserver_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_render_5fserver_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_render_5fserver_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_render_5fserver_2eproto;
namespace sapien {
namespace render_server {
namespace proto {
class AddBodyMeshReq;
struct AddBodyMeshReqDefaultTypeInternal;
extern AddBodyMeshReqDefaultTypeInternal _AddBodyMeshReq_default_instance_;
class AddBodyPrimitiveReq;
struct AddBodyPrimitiveReqDefaultTypeInternal;
extern AddBodyPrimitiveReqDefaultTypeInternal _AddBodyPrimitiveReq_default_instance_;
class AddCameraReq;
struct AddCameraReqDefaultTypeInternal;
extern AddCameraReqDefaultTypeInternal _AddCameraReq_default_instance_;
class AddDirectionalLightReq;
struct AddDirectionalLightReqDefaultTypeInternal;
extern AddDirectionalLightReqDefaultTypeInternal _AddDirectionalLightReq_default_instance_;
class AddPointLightReq;
struct AddPointLightReqDefaultTypeInternal;
extern AddPointLightReqDefaultTypeInternal _AddPointLightReq_default_instance_;
class BodyFloat32Req;
struct BodyFloat32ReqDefaultTypeInternal;
extern BodyFloat32ReqDefaultTypeInternal _BodyFloat32Req_default_instance_;
class BodyIdReq;
struct BodyIdReqDefaultTypeInternal;
extern BodyIdReqDefaultTypeInternal _BodyIdReq_default_instance_;
class BodyReq;
struct BodyReqDefaultTypeInternal;
extern BodyReqDefaultTypeInternal _BodyReq_default_instance_;
class BodyUint32Req;
struct BodyUint32ReqDefaultTypeInternal;
extern BodyUint32ReqDefaultTypeInternal _BodyUint32Req_default_instance_;
class CameraParamsReq;
struct CameraParamsReqDefaultTypeInternal;
extern CameraParamsReqDefaultTypeInternal _CameraParamsReq_default_instance_;
class Empty;
struct EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class EntityOrderReq;
struct EntityOrderReqDefaultTypeInternal;
extern EntityOrderReqDefaultTypeInternal _EntityOrderReq_default_instance_;
class Id;
struct IdDefaultTypeInternal;
extern IdDefaultTypeInternal _Id_default_instance_;
class IdFloat;
struct IdFloatDefaultTypeInternal;
extern IdFloatDefaultTypeInternal _IdFloat_default_instance_;
class IdVec3;
struct IdVec3DefaultTypeInternal;
extern IdVec3DefaultTypeInternal _IdVec3_default_instance_;
class IdVec4;
struct IdVec4DefaultTypeInternal;
extern IdVec4DefaultTypeInternal _IdVec4_default_instance_;
class Index;
struct IndexDefaultTypeInternal;
extern IndexDefaultTypeInternal _Index_default_instance_;
class Pose;
struct PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
class Quat;
struct QuatDefaultTypeInternal;
extern QuatDefaultTypeInternal _Quat_default_instance_;
class RemoveBodyReq;
struct RemoveBodyReqDefaultTypeInternal;
extern RemoveBodyReqDefaultTypeInternal _RemoveBodyReq_default_instance_;
class RemoveCameraReq;
struct RemoveCameraReqDefaultTypeInternal;
extern RemoveCameraReqDefaultTypeInternal _RemoveCameraReq_default_instance_;
class RemoveLightReq;
struct RemoveLightReqDefaultTypeInternal;
extern RemoveLightReqDefaultTypeInternal _RemoveLightReq_default_instance_;
class TakePictureReq;
struct TakePictureReqDefaultTypeInternal;
extern TakePictureReqDefaultTypeInternal _TakePictureReq_default_instance_;
class Uint32;
struct Uint32DefaultTypeInternal;
extern Uint32DefaultTypeInternal _Uint32_default_instance_;
class UpdateRenderAndTakePicturesReq;
struct UpdateRenderAndTakePicturesReqDefaultTypeInternal;
extern UpdateRenderAndTakePicturesReqDefaultTypeInternal _UpdateRenderAndTakePicturesReq_default_instance_;
class UpdateRenderReq;
struct UpdateRenderReqDefaultTypeInternal;
extern UpdateRenderReqDefaultTypeInternal _UpdateRenderReq_default_instance_;
class Vec3;
struct Vec3DefaultTypeInternal;
extern Vec3DefaultTypeInternal _Vec3_default_instance_;
class Vec4;
struct Vec4DefaultTypeInternal;
extern Vec4DefaultTypeInternal _Vec4_default_instance_;
}  // namespace proto
}  // namespace render_server
}  // namespace sapien
PROTOBUF_NAMESPACE_OPEN
template<> ::sapien::render_server::proto::AddBodyMeshReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::AddBodyMeshReq>(Arena*);
template<> ::sapien::render_server::proto::AddBodyPrimitiveReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::AddBodyPrimitiveReq>(Arena*);
template<> ::sapien::render_server::proto::AddCameraReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::AddCameraReq>(Arena*);
template<> ::sapien::render_server::proto::AddDirectionalLightReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::AddDirectionalLightReq>(Arena*);
template<> ::sapien::render_server::proto::AddPointLightReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::AddPointLightReq>(Arena*);
template<> ::sapien::render_server::proto::BodyFloat32Req* Arena::CreateMaybeMessage<::sapien::render_server::proto::BodyFloat32Req>(Arena*);
template<> ::sapien::render_server::proto::BodyIdReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::BodyIdReq>(Arena*);
template<> ::sapien::render_server::proto::BodyReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::BodyReq>(Arena*);
template<> ::sapien::render_server::proto::BodyUint32Req* Arena::CreateMaybeMessage<::sapien::render_server::proto::BodyUint32Req>(Arena*);
template<> ::sapien::render_server::proto::CameraParamsReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::CameraParamsReq>(Arena*);
template<> ::sapien::render_server::proto::Empty* Arena::CreateMaybeMessage<::sapien::render_server::proto::Empty>(Arena*);
template<> ::sapien::render_server::proto::EntityOrderReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::EntityOrderReq>(Arena*);
template<> ::sapien::render_server::proto::Id* Arena::CreateMaybeMessage<::sapien::render_server::proto::Id>(Arena*);
template<> ::sapien::render_server::proto::IdFloat* Arena::CreateMaybeMessage<::sapien::render_server::proto::IdFloat>(Arena*);
template<> ::sapien::render_server::proto::IdVec3* Arena::CreateMaybeMessage<::sapien::render_server::proto::IdVec3>(Arena*);
template<> ::sapien::render_server::proto::IdVec4* Arena::CreateMaybeMessage<::sapien::render_server::proto::IdVec4>(Arena*);
template<> ::sapien::render_server::proto::Index* Arena::CreateMaybeMessage<::sapien::render_server::proto::Index>(Arena*);
template<> ::sapien::render_server::proto::Pose* Arena::CreateMaybeMessage<::sapien::render_server::proto::Pose>(Arena*);
template<> ::sapien::render_server::proto::Quat* Arena::CreateMaybeMessage<::sapien::render_server::proto::Quat>(Arena*);
template<> ::sapien::render_server::proto::RemoveBodyReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::RemoveBodyReq>(Arena*);
template<> ::sapien::render_server::proto::RemoveCameraReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::RemoveCameraReq>(Arena*);
template<> ::sapien::render_server::proto::RemoveLightReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::RemoveLightReq>(Arena*);
template<> ::sapien::render_server::proto::TakePictureReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::TakePictureReq>(Arena*);
template<> ::sapien::render_server::proto::Uint32* Arena::CreateMaybeMessage<::sapien::render_server::proto::Uint32>(Arena*);
template<> ::sapien::render_server::proto::UpdateRenderAndTakePicturesReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::UpdateRenderAndTakePicturesReq>(Arena*);
template<> ::sapien::render_server::proto::UpdateRenderReq* Arena::CreateMaybeMessage<::sapien::render_server::proto::UpdateRenderReq>(Arena*);
template<> ::sapien::render_server::proto::Vec3* Arena::CreateMaybeMessage<::sapien::render_server::proto::Vec3>(Arena*);
template<> ::sapien::render_server::proto::Vec4* Arena::CreateMaybeMessage<::sapien::render_server::proto::Vec4>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace sapien {
namespace render_server {
namespace proto {

enum PrimitiveType : int {
  SPHERE = 0,
  BOX = 1,
  CAPSULE = 2,
  PLANE = 3,
  CYLINDER = 4,
  PrimitiveType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  PrimitiveType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool PrimitiveType_IsValid(int value);
constexpr PrimitiveType PrimitiveType_MIN = SPHERE;
constexpr PrimitiveType PrimitiveType_MAX = CYLINDER;
constexpr int PrimitiveType_ARRAYSIZE = PrimitiveType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrimitiveType_descriptor();
template<typename T>
inline const std::string& PrimitiveType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PrimitiveType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PrimitiveType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PrimitiveType_descriptor(), enum_t_value);
}
inline bool PrimitiveType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PrimitiveType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PrimitiveType>(
    PrimitiveType_descriptor(), name, value);
}
// ===================================================================

class Empty final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {}
  explicit PROTOBUF_CONSTEXPR Empty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Empty(const Empty& from);
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }
  inline void Swap(Empty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Empty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Empty& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Empty& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.Empty";
  }
  protected:
  explicit Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.Empty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Uint32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.Uint32) */ {
 public:
  inline Uint32() : Uint32(nullptr) {}
  ~Uint32() override;
  explicit PROTOBUF_CONSTEXPR Uint32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Uint32(const Uint32& from);
  Uint32(Uint32&& from) noexcept
    : Uint32() {
    *this = ::std::move(from);
  }

  inline Uint32& operator=(const Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Uint32& operator=(Uint32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Uint32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Uint32* internal_default_instance() {
    return reinterpret_cast<const Uint32*>(
               &_Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Uint32& a, Uint32& b) {
    a.Swap(&b);
  }
  inline void Swap(Uint32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Uint32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Uint32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Uint32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Uint32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Uint32& from) {
    Uint32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Uint32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.Uint32";
  }
  protected:
  explicit Uint32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // uint32 value = 1;
  void clear_value();
  uint32_t value() const;
  void set_value(uint32_t value);
  private:
  uint32_t _internal_value() const;
  void _internal_set_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.Uint32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t value_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Index final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.Index) */ {
 public:
  inline Index() : Index(nullptr) {}
  ~Index() override;
  explicit PROTOBUF_CONSTEXPR Index(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Index(const Index& from);
  Index(Index&& from) noexcept
    : Index() {
    *this = ::std::move(from);
  }

  inline Index& operator=(const Index& from) {
    CopyFrom(from);
    return *this;
  }
  inline Index& operator=(Index&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Index& default_instance() {
    return *internal_default_instance();
  }
  static inline const Index* internal_default_instance() {
    return reinterpret_cast<const Index*>(
               &_Index_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Index& a, Index& b) {
    a.Swap(&b);
  }
  inline void Swap(Index* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Index* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Index* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Index>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Index& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Index& from) {
    Index::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Index* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.Index";
  }
  protected:
  explicit Index(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
  };
  // uint64 index = 1;
  void clear_index();
  uint64_t index() const;
  void set_index(uint64_t value);
  private:
  uint64_t _internal_index() const;
  void _internal_set_index(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.Index)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Id final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.Id) */ {
 public:
  inline Id() : Id(nullptr) {}
  ~Id() override;
  explicit PROTOBUF_CONSTEXPR Id(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Id(const Id& from);
  Id(Id&& from) noexcept
    : Id() {
    *this = ::std::move(from);
  }

  inline Id& operator=(const Id& from) {
    CopyFrom(from);
    return *this;
  }
  inline Id& operator=(Id&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Id& default_instance() {
    return *internal_default_instance();
  }
  static inline const Id* internal_default_instance() {
    return reinterpret_cast<const Id*>(
               &_Id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Id& a, Id& b) {
    a.Swap(&b);
  }
  inline void Swap(Id* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Id* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Id* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Id>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Id& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Id& from) {
    Id::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Id* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.Id";
  }
  protected:
  explicit Id(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint64 id = 1;
  void clear_id();
  uint64_t id() const;
  void set_id(uint64_t value);
  private:
  uint64_t _internal_id() const;
  void _internal_set_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.Id)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Vec3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.Vec3) */ {
 public:
  inline Vec3() : Vec3(nullptr) {}
  ~Vec3() override;
  explicit PROTOBUF_CONSTEXPR Vec3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vec3(const Vec3& from);
  Vec3(Vec3&& from) noexcept
    : Vec3() {
    *this = ::std::move(from);
  }

  inline Vec3& operator=(const Vec3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec3& operator=(Vec3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vec3& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vec3* internal_default_instance() {
    return reinterpret_cast<const Vec3*>(
               &_Vec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Vec3& a, Vec3& b) {
    a.Swap(&b);
  }
  inline void Swap(Vec3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vec3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vec3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vec3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vec3& from) {
    Vec3::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vec3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.Vec3";
  }
  protected:
  explicit Vec3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.Vec3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    float z_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Vec4 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.Vec4) */ {
 public:
  inline Vec4() : Vec4(nullptr) {}
  ~Vec4() override;
  explicit PROTOBUF_CONSTEXPR Vec4(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vec4(const Vec4& from);
  Vec4(Vec4&& from) noexcept
    : Vec4() {
    *this = ::std::move(from);
  }

  inline Vec4& operator=(const Vec4& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec4& operator=(Vec4&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vec4& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vec4* internal_default_instance() {
    return reinterpret_cast<const Vec4*>(
               &_Vec4_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Vec4& a, Vec4& b) {
    a.Swap(&b);
  }
  inline void Swap(Vec4* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec4* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vec4* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vec4>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vec4& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vec4& from) {
    Vec4::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vec4* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.Vec4";
  }
  protected:
  explicit Vec4(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kWFieldNumber = 4,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // float w = 4;
  void clear_w();
  float w() const;
  void set_w(float value);
  private:
  float _internal_w() const;
  void _internal_set_w(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.Vec4)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    float z_;
    float w_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Quat final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.Quat) */ {
 public:
  inline Quat() : Quat(nullptr) {}
  ~Quat() override;
  explicit PROTOBUF_CONSTEXPR Quat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Quat(const Quat& from);
  Quat(Quat&& from) noexcept
    : Quat() {
    *this = ::std::move(from);
  }

  inline Quat& operator=(const Quat& from) {
    CopyFrom(from);
    return *this;
  }
  inline Quat& operator=(Quat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Quat& default_instance() {
    return *internal_default_instance();
  }
  static inline const Quat* internal_default_instance() {
    return reinterpret_cast<const Quat*>(
               &_Quat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Quat& a, Quat& b) {
    a.Swap(&b);
  }
  inline void Swap(Quat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Quat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Quat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Quat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Quat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Quat& from) {
    Quat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Quat* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.Quat";
  }
  protected:
  explicit Quat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kZFieldNumber = 4,
  };
  // float w = 1;
  void clear_w();
  float w() const;
  void set_w(float value);
  private:
  float _internal_w() const;
  void _internal_set_w(float value);
  public:

  // float x = 2;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 3;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 4;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.Quat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float w_;
    float x_;
    float y_;
    float z_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Pose final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.Pose) */ {
 public:
  inline Pose() : Pose(nullptr) {}
  ~Pose() override;
  explicit PROTOBUF_CONSTEXPR Pose(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Pose(const Pose& from);
  Pose(Pose&& from) noexcept
    : Pose() {
    *this = ::std::move(from);
  }

  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pose& operator=(Pose&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pose& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pose* internal_default_instance() {
    return reinterpret_cast<const Pose*>(
               &_Pose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Pose& a, Pose& b) {
    a.Swap(&b);
  }
  inline void Swap(Pose* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pose* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pose* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Pose>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Pose& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Pose& from) {
    Pose::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pose* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.Pose";
  }
  protected:
  explicit Pose(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPFieldNumber = 1,
    kQFieldNumber = 2,
  };
  // .sapien.render_server.proto.Vec3 p = 1;
  bool has_p() const;
  private:
  bool _internal_has_p() const;
  public:
  void clear_p();
  const ::sapien::render_server::proto::Vec3& p() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec3* release_p();
  ::sapien::render_server::proto::Vec3* mutable_p();
  void set_allocated_p(::sapien::render_server::proto::Vec3* p);
  private:
  const ::sapien::render_server::proto::Vec3& _internal_p() const;
  ::sapien::render_server::proto::Vec3* _internal_mutable_p();
  public:
  void unsafe_arena_set_allocated_p(
      ::sapien::render_server::proto::Vec3* p);
  ::sapien::render_server::proto::Vec3* unsafe_arena_release_p();

  // .sapien.render_server.proto.Quat q = 2;
  bool has_q() const;
  private:
  bool _internal_has_q() const;
  public:
  void clear_q();
  const ::sapien::render_server::proto::Quat& q() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Quat* release_q();
  ::sapien::render_server::proto::Quat* mutable_q();
  void set_allocated_q(::sapien::render_server::proto::Quat* q);
  private:
  const ::sapien::render_server::proto::Quat& _internal_q() const;
  ::sapien::render_server::proto::Quat* _internal_mutable_q();
  public:
  void unsafe_arena_set_allocated_q(
      ::sapien::render_server::proto::Quat* q);
  ::sapien::render_server::proto::Quat* unsafe_arena_release_q();

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.Pose)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::sapien::render_server::proto::Vec3* p_;
    ::sapien::render_server::proto::Quat* q_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class IdVec3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.IdVec3) */ {
 public:
  inline IdVec3() : IdVec3(nullptr) {}
  ~IdVec3() override;
  explicit PROTOBUF_CONSTEXPR IdVec3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IdVec3(const IdVec3& from);
  IdVec3(IdVec3&& from) noexcept
    : IdVec3() {
    *this = ::std::move(from);
  }

  inline IdVec3& operator=(const IdVec3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdVec3& operator=(IdVec3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IdVec3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdVec3* internal_default_instance() {
    return reinterpret_cast<const IdVec3*>(
               &_IdVec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(IdVec3& a, IdVec3& b) {
    a.Swap(&b);
  }
  inline void Swap(IdVec3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdVec3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IdVec3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IdVec3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IdVec3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const IdVec3& from) {
    IdVec3::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdVec3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.IdVec3";
  }
  protected:
  explicit IdVec3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // .sapien.render_server.proto.Vec3 data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::sapien::render_server::proto::Vec3& data() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec3* release_data();
  ::sapien::render_server::proto::Vec3* mutable_data();
  void set_allocated_data(::sapien::render_server::proto::Vec3* data);
  private:
  const ::sapien::render_server::proto::Vec3& _internal_data() const;
  ::sapien::render_server::proto::Vec3* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::sapien::render_server::proto::Vec3* data);
  ::sapien::render_server::proto::Vec3* unsafe_arena_release_data();

  // uint64 id = 1;
  void clear_id();
  uint64_t id() const;
  void set_id(uint64_t value);
  private:
  uint64_t _internal_id() const;
  void _internal_set_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.IdVec3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::sapien::render_server::proto::Vec3* data_;
    uint64_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class IdVec4 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.IdVec4) */ {
 public:
  inline IdVec4() : IdVec4(nullptr) {}
  ~IdVec4() override;
  explicit PROTOBUF_CONSTEXPR IdVec4(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IdVec4(const IdVec4& from);
  IdVec4(IdVec4&& from) noexcept
    : IdVec4() {
    *this = ::std::move(from);
  }

  inline IdVec4& operator=(const IdVec4& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdVec4& operator=(IdVec4&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IdVec4& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdVec4* internal_default_instance() {
    return reinterpret_cast<const IdVec4*>(
               &_IdVec4_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(IdVec4& a, IdVec4& b) {
    a.Swap(&b);
  }
  inline void Swap(IdVec4* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdVec4* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IdVec4* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IdVec4>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IdVec4& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const IdVec4& from) {
    IdVec4::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdVec4* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.IdVec4";
  }
  protected:
  explicit IdVec4(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // .sapien.render_server.proto.Vec4 data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::sapien::render_server::proto::Vec4& data() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec4* release_data();
  ::sapien::render_server::proto::Vec4* mutable_data();
  void set_allocated_data(::sapien::render_server::proto::Vec4* data);
  private:
  const ::sapien::render_server::proto::Vec4& _internal_data() const;
  ::sapien::render_server::proto::Vec4* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::sapien::render_server::proto::Vec4* data);
  ::sapien::render_server::proto::Vec4* unsafe_arena_release_data();

  // uint64 id = 1;
  void clear_id();
  uint64_t id() const;
  void set_id(uint64_t value);
  private:
  uint64_t _internal_id() const;
  void _internal_set_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.IdVec4)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::sapien::render_server::proto::Vec4* data_;
    uint64_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class IdFloat final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.IdFloat) */ {
 public:
  inline IdFloat() : IdFloat(nullptr) {}
  ~IdFloat() override;
  explicit PROTOBUF_CONSTEXPR IdFloat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IdFloat(const IdFloat& from);
  IdFloat(IdFloat&& from) noexcept
    : IdFloat() {
    *this = ::std::move(from);
  }

  inline IdFloat& operator=(const IdFloat& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdFloat& operator=(IdFloat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IdFloat& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdFloat* internal_default_instance() {
    return reinterpret_cast<const IdFloat*>(
               &_IdFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(IdFloat& a, IdFloat& b) {
    a.Swap(&b);
  }
  inline void Swap(IdFloat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdFloat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IdFloat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IdFloat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IdFloat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const IdFloat& from) {
    IdFloat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdFloat* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.IdFloat";
  }
  protected:
  explicit IdFloat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // uint64 id = 1;
  void clear_id();
  uint64_t id() const;
  void set_id(uint64_t value);
  private:
  uint64_t _internal_id() const;
  void _internal_set_id(uint64_t value);
  public:

  // float data = 2;
  void clear_data();
  float data() const;
  void set_data(float value);
  private:
  float _internal_data() const;
  void _internal_set_data(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.IdFloat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t id_;
    float data_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddBodyMeshReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.AddBodyMeshReq) */ {
 public:
  inline AddBodyMeshReq() : AddBodyMeshReq(nullptr) {}
  ~AddBodyMeshReq() override;
  explicit PROTOBUF_CONSTEXPR AddBodyMeshReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AddBodyMeshReq(const AddBodyMeshReq& from);
  AddBodyMeshReq(AddBodyMeshReq&& from) noexcept
    : AddBodyMeshReq() {
    *this = ::std::move(from);
  }

  inline AddBodyMeshReq& operator=(const AddBodyMeshReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddBodyMeshReq& operator=(AddBodyMeshReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddBodyMeshReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddBodyMeshReq* internal_default_instance() {
    return reinterpret_cast<const AddBodyMeshReq*>(
               &_AddBodyMeshReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(AddBodyMeshReq& a, AddBodyMeshReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddBodyMeshReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddBodyMeshReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddBodyMeshReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddBodyMeshReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AddBodyMeshReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AddBodyMeshReq& from) {
    AddBodyMeshReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddBodyMeshReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.AddBodyMeshReq";
  }
  protected:
  explicit AddBodyMeshReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 2,
    kScaleFieldNumber = 3,
    kSceneIdFieldNumber = 1,
    kSegmentation0FieldNumber = 4,
    kSegmentation1FieldNumber = 5,
  };
  // string filename = 2;
  void clear_filename();
  const std::string& filename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_filename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // .sapien.render_server.proto.Vec3 scale = 3;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  const ::sapien::render_server::proto::Vec3& scale() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec3* release_scale();
  ::sapien::render_server::proto::Vec3* mutable_scale();
  void set_allocated_scale(::sapien::render_server::proto::Vec3* scale);
  private:
  const ::sapien::render_server::proto::Vec3& _internal_scale() const;
  ::sapien::render_server::proto::Vec3* _internal_mutable_scale();
  public:
  void unsafe_arena_set_allocated_scale(
      ::sapien::render_server::proto::Vec3* scale);
  ::sapien::render_server::proto::Vec3* unsafe_arena_release_scale();

  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 segmentation0 = 4;
  void clear_segmentation0();
  uint64_t segmentation0() const;
  void set_segmentation0(uint64_t value);
  private:
  uint64_t _internal_segmentation0() const;
  void _internal_set_segmentation0(uint64_t value);
  public:

  // uint64 segmentation1 = 5;
  void clear_segmentation1();
  uint64_t segmentation1() const;
  void set_segmentation1(uint64_t value);
  private:
  uint64_t _internal_segmentation1() const;
  void _internal_set_segmentation1(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.AddBodyMeshReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
    ::sapien::render_server::proto::Vec3* scale_;
    uint64_t scene_id_;
    uint64_t segmentation0_;
    uint64_t segmentation1_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddBodyPrimitiveReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.AddBodyPrimitiveReq) */ {
 public:
  inline AddBodyPrimitiveReq() : AddBodyPrimitiveReq(nullptr) {}
  ~AddBodyPrimitiveReq() override;
  explicit PROTOBUF_CONSTEXPR AddBodyPrimitiveReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AddBodyPrimitiveReq(const AddBodyPrimitiveReq& from);
  AddBodyPrimitiveReq(AddBodyPrimitiveReq&& from) noexcept
    : AddBodyPrimitiveReq() {
    *this = ::std::move(from);
  }

  inline AddBodyPrimitiveReq& operator=(const AddBodyPrimitiveReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddBodyPrimitiveReq& operator=(AddBodyPrimitiveReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddBodyPrimitiveReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddBodyPrimitiveReq* internal_default_instance() {
    return reinterpret_cast<const AddBodyPrimitiveReq*>(
               &_AddBodyPrimitiveReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(AddBodyPrimitiveReq& a, AddBodyPrimitiveReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddBodyPrimitiveReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddBodyPrimitiveReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddBodyPrimitiveReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddBodyPrimitiveReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AddBodyPrimitiveReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AddBodyPrimitiveReq& from) {
    AddBodyPrimitiveReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddBodyPrimitiveReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.AddBodyPrimitiveReq";
  }
  protected:
  explicit AddBodyPrimitiveReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScaleFieldNumber = 3,
    kSceneIdFieldNumber = 1,
    kMaterialFieldNumber = 4,
    kSegmentation0FieldNumber = 5,
    kSegmentation1FieldNumber = 6,
    kTypeFieldNumber = 2,
  };
  // .sapien.render_server.proto.Vec3 scale = 3;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  const ::sapien::render_server::proto::Vec3& scale() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec3* release_scale();
  ::sapien::render_server::proto::Vec3* mutable_scale();
  void set_allocated_scale(::sapien::render_server::proto::Vec3* scale);
  private:
  const ::sapien::render_server::proto::Vec3& _internal_scale() const;
  ::sapien::render_server::proto::Vec3* _internal_mutable_scale();
  public:
  void unsafe_arena_set_allocated_scale(
      ::sapien::render_server::proto::Vec3* scale);
  ::sapien::render_server::proto::Vec3* unsafe_arena_release_scale();

  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 material = 4;
  void clear_material();
  uint64_t material() const;
  void set_material(uint64_t value);
  private:
  uint64_t _internal_material() const;
  void _internal_set_material(uint64_t value);
  public:

  // uint64 segmentation0 = 5;
  void clear_segmentation0();
  uint64_t segmentation0() const;
  void set_segmentation0(uint64_t value);
  private:
  uint64_t _internal_segmentation0() const;
  void _internal_set_segmentation0(uint64_t value);
  public:

  // uint64 segmentation1 = 6;
  void clear_segmentation1();
  uint64_t segmentation1() const;
  void set_segmentation1(uint64_t value);
  private:
  uint64_t _internal_segmentation1() const;
  void _internal_set_segmentation1(uint64_t value);
  public:

  // .sapien.render_server.proto.PrimitiveType type = 2;
  void clear_type();
  ::sapien::render_server::proto::PrimitiveType type() const;
  void set_type(::sapien::render_server::proto::PrimitiveType value);
  private:
  ::sapien::render_server::proto::PrimitiveType _internal_type() const;
  void _internal_set_type(::sapien::render_server::proto::PrimitiveType value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.AddBodyPrimitiveReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::sapien::render_server::proto::Vec3* scale_;
    uint64_t scene_id_;
    uint64_t material_;
    uint64_t segmentation0_;
    uint64_t segmentation1_;
    int type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class RemoveBodyReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.RemoveBodyReq) */ {
 public:
  inline RemoveBodyReq() : RemoveBodyReq(nullptr) {}
  ~RemoveBodyReq() override;
  explicit PROTOBUF_CONSTEXPR RemoveBodyReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RemoveBodyReq(const RemoveBodyReq& from);
  RemoveBodyReq(RemoveBodyReq&& from) noexcept
    : RemoveBodyReq() {
    *this = ::std::move(from);
  }

  inline RemoveBodyReq& operator=(const RemoveBodyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveBodyReq& operator=(RemoveBodyReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveBodyReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveBodyReq* internal_default_instance() {
    return reinterpret_cast<const RemoveBodyReq*>(
               &_RemoveBodyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(RemoveBodyReq& a, RemoveBodyReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveBodyReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveBodyReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveBodyReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveBodyReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RemoveBodyReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const RemoveBodyReq& from) {
    RemoveBodyReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveBodyReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.RemoveBodyReq";
  }
  protected:
  explicit RemoveBodyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kBodyIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 body_id = 2;
  void clear_body_id();
  uint64_t body_id() const;
  void set_body_id(uint64_t value);
  private:
  uint64_t _internal_body_id() const;
  void _internal_set_body_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.RemoveBodyReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t scene_id_;
    uint64_t body_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddCameraReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.AddCameraReq) */ {
 public:
  inline AddCameraReq() : AddCameraReq(nullptr) {}
  ~AddCameraReq() override;
  explicit PROTOBUF_CONSTEXPR AddCameraReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AddCameraReq(const AddCameraReq& from);
  AddCameraReq(AddCameraReq&& from) noexcept
    : AddCameraReq() {
    *this = ::std::move(from);
  }

  inline AddCameraReq& operator=(const AddCameraReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddCameraReq& operator=(AddCameraReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddCameraReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddCameraReq* internal_default_instance() {
    return reinterpret_cast<const AddCameraReq*>(
               &_AddCameraReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(AddCameraReq& a, AddCameraReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddCameraReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddCameraReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddCameraReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddCameraReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AddCameraReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AddCameraReq& from) {
    AddCameraReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddCameraReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.AddCameraReq";
  }
  protected:
  explicit AddCameraReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShaderFieldNumber = 11,
    kSceneIdFieldNumber = 1,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
    kNearFieldNumber = 4,
    kFarFieldNumber = 5,
    kFxFieldNumber = 6,
    kFyFieldNumber = 7,
    kCxFieldNumber = 8,
    kCyFieldNumber = 9,
    kSkewFieldNumber = 10,
  };
  // string shader = 11;
  void clear_shader();
  const std::string& shader() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_shader(ArgT0&& arg0, ArgT... args);
  std::string* mutable_shader();
  PROTOBUF_NODISCARD std::string* release_shader();
  void set_allocated_shader(std::string* shader);
  private:
  const std::string& _internal_shader() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_shader(const std::string& value);
  std::string* _internal_mutable_shader();
  public:

  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint32 width = 2;
  void clear_width();
  uint32_t width() const;
  void set_width(uint32_t value);
  private:
  uint32_t _internal_width() const;
  void _internal_set_width(uint32_t value);
  public:

  // uint32 height = 3;
  void clear_height();
  uint32_t height() const;
  void set_height(uint32_t value);
  private:
  uint32_t _internal_height() const;
  void _internal_set_height(uint32_t value);
  public:

  // float near = 4;
  void clear_near();
  float near() const;
  void set_near(float value);
  private:
  float _internal_near() const;
  void _internal_set_near(float value);
  public:

  // float far = 5;
  void clear_far();
  float far() const;
  void set_far(float value);
  private:
  float _internal_far() const;
  void _internal_set_far(float value);
  public:

  // float fx = 6;
  void clear_fx();
  float fx() const;
  void set_fx(float value);
  private:
  float _internal_fx() const;
  void _internal_set_fx(float value);
  public:

  // float fy = 7;
  void clear_fy();
  float fy() const;
  void set_fy(float value);
  private:
  float _internal_fy() const;
  void _internal_set_fy(float value);
  public:

  // float cx = 8;
  void clear_cx();
  float cx() const;
  void set_cx(float value);
  private:
  float _internal_cx() const;
  void _internal_set_cx(float value);
  public:

  // float cy = 9;
  void clear_cy();
  float cy() const;
  void set_cy(float value);
  private:
  float _internal_cy() const;
  void _internal_set_cy(float value);
  public:

  // float skew = 10;
  void clear_skew();
  float skew() const;
  void set_skew(float value);
  private:
  float _internal_skew() const;
  void _internal_set_skew(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.AddCameraReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr shader_;
    uint64_t scene_id_;
    uint32_t width_;
    uint32_t height_;
    float near_;
    float far_;
    float fx_;
    float fy_;
    float cx_;
    float cy_;
    float skew_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class RemoveCameraReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.RemoveCameraReq) */ {
 public:
  inline RemoveCameraReq() : RemoveCameraReq(nullptr) {}
  ~RemoveCameraReq() override;
  explicit PROTOBUF_CONSTEXPR RemoveCameraReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RemoveCameraReq(const RemoveCameraReq& from);
  RemoveCameraReq(RemoveCameraReq&& from) noexcept
    : RemoveCameraReq() {
    *this = ::std::move(from);
  }

  inline RemoveCameraReq& operator=(const RemoveCameraReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveCameraReq& operator=(RemoveCameraReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveCameraReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveCameraReq* internal_default_instance() {
    return reinterpret_cast<const RemoveCameraReq*>(
               &_RemoveCameraReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(RemoveCameraReq& a, RemoveCameraReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveCameraReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveCameraReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveCameraReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveCameraReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RemoveCameraReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const RemoveCameraReq& from) {
    RemoveCameraReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveCameraReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.RemoveCameraReq";
  }
  protected:
  explicit RemoveCameraReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kCameraIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 camera_id = 2;
  void clear_camera_id();
  uint64_t camera_id() const;
  void set_camera_id(uint64_t value);
  private:
  uint64_t _internal_camera_id() const;
  void _internal_set_camera_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.RemoveCameraReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t scene_id_;
    uint64_t camera_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddPointLightReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.AddPointLightReq) */ {
 public:
  inline AddPointLightReq() : AddPointLightReq(nullptr) {}
  ~AddPointLightReq() override;
  explicit PROTOBUF_CONSTEXPR AddPointLightReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AddPointLightReq(const AddPointLightReq& from);
  AddPointLightReq(AddPointLightReq&& from) noexcept
    : AddPointLightReq() {
    *this = ::std::move(from);
  }

  inline AddPointLightReq& operator=(const AddPointLightReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddPointLightReq& operator=(AddPointLightReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddPointLightReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddPointLightReq* internal_default_instance() {
    return reinterpret_cast<const AddPointLightReq*>(
               &_AddPointLightReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(AddPointLightReq& a, AddPointLightReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddPointLightReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddPointLightReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddPointLightReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddPointLightReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AddPointLightReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AddPointLightReq& from) {
    AddPointLightReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddPointLightReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.AddPointLightReq";
  }
  protected:
  explicit AddPointLightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 2,
    kColorFieldNumber = 3,
    kSceneIdFieldNumber = 1,
    kShadowFieldNumber = 4,
    kShadowNearFieldNumber = 5,
    kShadowFarFieldNumber = 6,
    kShadowMapSizeFieldNumber = 7,
  };
  // .sapien.render_server.proto.Vec3 position = 2;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::sapien::render_server::proto::Vec3& position() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec3* release_position();
  ::sapien::render_server::proto::Vec3* mutable_position();
  void set_allocated_position(::sapien::render_server::proto::Vec3* position);
  private:
  const ::sapien::render_server::proto::Vec3& _internal_position() const;
  ::sapien::render_server::proto::Vec3* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::sapien::render_server::proto::Vec3* position);
  ::sapien::render_server::proto::Vec3* unsafe_arena_release_position();

  // .sapien.render_server.proto.Vec3 color = 3;
  bool has_color() const;
  private:
  bool _internal_has_color() const;
  public:
  void clear_color();
  const ::sapien::render_server::proto::Vec3& color() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec3* release_color();
  ::sapien::render_server::proto::Vec3* mutable_color();
  void set_allocated_color(::sapien::render_server::proto::Vec3* color);
  private:
  const ::sapien::render_server::proto::Vec3& _internal_color() const;
  ::sapien::render_server::proto::Vec3* _internal_mutable_color();
  public:
  void unsafe_arena_set_allocated_color(
      ::sapien::render_server::proto::Vec3* color);
  ::sapien::render_server::proto::Vec3* unsafe_arena_release_color();

  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // bool shadow = 4;
  void clear_shadow();
  bool shadow() const;
  void set_shadow(bool value);
  private:
  bool _internal_shadow() const;
  void _internal_set_shadow(bool value);
  public:

  // float shadow_near = 5;
  void clear_shadow_near();
  float shadow_near() const;
  void set_shadow_near(float value);
  private:
  float _internal_shadow_near() const;
  void _internal_set_shadow_near(float value);
  public:

  // float shadow_far = 6;
  void clear_shadow_far();
  float shadow_far() const;
  void set_shadow_far(float value);
  private:
  float _internal_shadow_far() const;
  void _internal_set_shadow_far(float value);
  public:

  // int32 shadow_map_size = 7;
  void clear_shadow_map_size();
  int32_t shadow_map_size() const;
  void set_shadow_map_size(int32_t value);
  private:
  int32_t _internal_shadow_map_size() const;
  void _internal_set_shadow_map_size(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.AddPointLightReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::sapien::render_server::proto::Vec3* position_;
    ::sapien::render_server::proto::Vec3* color_;
    uint64_t scene_id_;
    bool shadow_;
    float shadow_near_;
    float shadow_far_;
    int32_t shadow_map_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddDirectionalLightReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.AddDirectionalLightReq) */ {
 public:
  inline AddDirectionalLightReq() : AddDirectionalLightReq(nullptr) {}
  ~AddDirectionalLightReq() override;
  explicit PROTOBUF_CONSTEXPR AddDirectionalLightReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AddDirectionalLightReq(const AddDirectionalLightReq& from);
  AddDirectionalLightReq(AddDirectionalLightReq&& from) noexcept
    : AddDirectionalLightReq() {
    *this = ::std::move(from);
  }

  inline AddDirectionalLightReq& operator=(const AddDirectionalLightReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddDirectionalLightReq& operator=(AddDirectionalLightReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddDirectionalLightReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddDirectionalLightReq* internal_default_instance() {
    return reinterpret_cast<const AddDirectionalLightReq*>(
               &_AddDirectionalLightReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(AddDirectionalLightReq& a, AddDirectionalLightReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddDirectionalLightReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddDirectionalLightReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddDirectionalLightReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddDirectionalLightReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AddDirectionalLightReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AddDirectionalLightReq& from) {
    AddDirectionalLightReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddDirectionalLightReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.AddDirectionalLightReq";
  }
  protected:
  explicit AddDirectionalLightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDirectionFieldNumber = 2,
    kColorFieldNumber = 3,
    kPositionFieldNumber = 5,
    kSceneIdFieldNumber = 1,
    kShadowFieldNumber = 4,
    kShadowScaleFieldNumber = 6,
    kShadowNearFieldNumber = 7,
    kShadowFarFieldNumber = 8,
    kShadowMapSizeFieldNumber = 9,
  };
  // .sapien.render_server.proto.Vec3 direction = 2;
  bool has_direction() const;
  private:
  bool _internal_has_direction() const;
  public:
  void clear_direction();
  const ::sapien::render_server::proto::Vec3& direction() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec3* release_direction();
  ::sapien::render_server::proto::Vec3* mutable_direction();
  void set_allocated_direction(::sapien::render_server::proto::Vec3* direction);
  private:
  const ::sapien::render_server::proto::Vec3& _internal_direction() const;
  ::sapien::render_server::proto::Vec3* _internal_mutable_direction();
  public:
  void unsafe_arena_set_allocated_direction(
      ::sapien::render_server::proto::Vec3* direction);
  ::sapien::render_server::proto::Vec3* unsafe_arena_release_direction();

  // .sapien.render_server.proto.Vec3 color = 3;
  bool has_color() const;
  private:
  bool _internal_has_color() const;
  public:
  void clear_color();
  const ::sapien::render_server::proto::Vec3& color() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec3* release_color();
  ::sapien::render_server::proto::Vec3* mutable_color();
  void set_allocated_color(::sapien::render_server::proto::Vec3* color);
  private:
  const ::sapien::render_server::proto::Vec3& _internal_color() const;
  ::sapien::render_server::proto::Vec3* _internal_mutable_color();
  public:
  void unsafe_arena_set_allocated_color(
      ::sapien::render_server::proto::Vec3* color);
  ::sapien::render_server::proto::Vec3* unsafe_arena_release_color();

  // .sapien.render_server.proto.Vec3 position = 5;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::sapien::render_server::proto::Vec3& position() const;
  PROTOBUF_NODISCARD ::sapien::render_server::proto::Vec3* release_position();
  ::sapien::render_server::proto::Vec3* mutable_position();
  void set_allocated_position(::sapien::render_server::proto::Vec3* position);
  private:
  const ::sapien::render_server::proto::Vec3& _internal_position() const;
  ::sapien::render_server::proto::Vec3* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::sapien::render_server::proto::Vec3* position);
  ::sapien::render_server::proto::Vec3* unsafe_arena_release_position();

  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // bool shadow = 4;
  void clear_shadow();
  bool shadow() const;
  void set_shadow(bool value);
  private:
  bool _internal_shadow() const;
  void _internal_set_shadow(bool value);
  public:

  // float shadow_scale = 6;
  void clear_shadow_scale();
  float shadow_scale() const;
  void set_shadow_scale(float value);
  private:
  float _internal_shadow_scale() const;
  void _internal_set_shadow_scale(float value);
  public:

  // float shadow_near = 7;
  void clear_shadow_near();
  float shadow_near() const;
  void set_shadow_near(float value);
  private:
  float _internal_shadow_near() const;
  void _internal_set_shadow_near(float value);
  public:

  // float shadow_far = 8;
  void clear_shadow_far();
  float shadow_far() const;
  void set_shadow_far(float value);
  private:
  float _internal_shadow_far() const;
  void _internal_set_shadow_far(float value);
  public:

  // int32 shadow_map_size = 9;
  void clear_shadow_map_size();
  int32_t shadow_map_size() const;
  void set_shadow_map_size(int32_t value);
  private:
  int32_t _internal_shadow_map_size() const;
  void _internal_set_shadow_map_size(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.AddDirectionalLightReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::sapien::render_server::proto::Vec3* direction_;
    ::sapien::render_server::proto::Vec3* color_;
    ::sapien::render_server::proto::Vec3* position_;
    uint64_t scene_id_;
    bool shadow_;
    float shadow_scale_;
    float shadow_near_;
    float shadow_far_;
    int32_t shadow_map_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class RemoveLightReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.RemoveLightReq) */ {
 public:
  inline RemoveLightReq() : RemoveLightReq(nullptr) {}
  ~RemoveLightReq() override;
  explicit PROTOBUF_CONSTEXPR RemoveLightReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RemoveLightReq(const RemoveLightReq& from);
  RemoveLightReq(RemoveLightReq&& from) noexcept
    : RemoveLightReq() {
    *this = ::std::move(from);
  }

  inline RemoveLightReq& operator=(const RemoveLightReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveLightReq& operator=(RemoveLightReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveLightReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveLightReq* internal_default_instance() {
    return reinterpret_cast<const RemoveLightReq*>(
               &_RemoveLightReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(RemoveLightReq& a, RemoveLightReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveLightReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveLightReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveLightReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveLightReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RemoveLightReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const RemoveLightReq& from) {
    RemoveLightReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveLightReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.RemoveLightReq";
  }
  protected:
  explicit RemoveLightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kLightIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 light_id = 2;
  void clear_light_id();
  uint64_t light_id() const;
  void set_light_id(uint64_t value);
  private:
  uint64_t _internal_light_id() const;
  void _internal_set_light_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.RemoveLightReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t scene_id_;
    uint64_t light_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class EntityOrderReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.EntityOrderReq) */ {
 public:
  inline EntityOrderReq() : EntityOrderReq(nullptr) {}
  ~EntityOrderReq() override;
  explicit PROTOBUF_CONSTEXPR EntityOrderReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EntityOrderReq(const EntityOrderReq& from);
  EntityOrderReq(EntityOrderReq&& from) noexcept
    : EntityOrderReq() {
    *this = ::std::move(from);
  }

  inline EntityOrderReq& operator=(const EntityOrderReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityOrderReq& operator=(EntityOrderReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityOrderReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityOrderReq* internal_default_instance() {
    return reinterpret_cast<const EntityOrderReq*>(
               &_EntityOrderReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(EntityOrderReq& a, EntityOrderReq& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityOrderReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityOrderReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityOrderReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EntityOrderReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EntityOrderReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EntityOrderReq& from) {
    EntityOrderReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EntityOrderReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.EntityOrderReq";
  }
  protected:
  explicit EntityOrderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyIdsFieldNumber = 2,
    kCameraIdsFieldNumber = 3,
    kSceneIdFieldNumber = 1,
  };
  // repeated uint64 body_ids = 2 [packed = true];
  int body_ids_size() const;
  private:
  int _internal_body_ids_size() const;
  public:
  void clear_body_ids();
  private:
  uint64_t _internal_body_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_body_ids() const;
  void _internal_add_body_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_body_ids();
  public:
  uint64_t body_ids(int index) const;
  void set_body_ids(int index, uint64_t value);
  void add_body_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      body_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_body_ids();

  // repeated uint64 camera_ids = 3 [packed = true];
  int camera_ids_size() const;
  private:
  int _internal_camera_ids_size() const;
  public:
  void clear_camera_ids();
  private:
  uint64_t _internal_camera_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_camera_ids() const;
  void _internal_add_camera_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_camera_ids();
  public:
  uint64_t camera_ids(int index) const;
  void set_camera_ids(int index, uint64_t value);
  void add_camera_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      camera_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_camera_ids();

  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.EntityOrderReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > body_ids_;
    mutable std::atomic<int> _body_ids_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > camera_ids_;
    mutable std::atomic<int> _camera_ids_cached_byte_size_;
    uint64_t scene_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class UpdateRenderReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.UpdateRenderReq) */ {
 public:
  inline UpdateRenderReq() : UpdateRenderReq(nullptr) {}
  ~UpdateRenderReq() override;
  explicit PROTOBUF_CONSTEXPR UpdateRenderReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateRenderReq(const UpdateRenderReq& from);
  UpdateRenderReq(UpdateRenderReq&& from) noexcept
    : UpdateRenderReq() {
    *this = ::std::move(from);
  }

  inline UpdateRenderReq& operator=(const UpdateRenderReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRenderReq& operator=(UpdateRenderReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRenderReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRenderReq* internal_default_instance() {
    return reinterpret_cast<const UpdateRenderReq*>(
               &_UpdateRenderReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(UpdateRenderReq& a, UpdateRenderReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateRenderReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRenderReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRenderReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateRenderReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UpdateRenderReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UpdateRenderReq& from) {
    UpdateRenderReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateRenderReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.UpdateRenderReq";
  }
  protected:
  explicit UpdateRenderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyPosesFieldNumber = 2,
    kCameraPosesFieldNumber = 3,
    kSceneIdFieldNumber = 1,
  };
  // repeated .sapien.render_server.proto.Pose body_poses = 2;
  int body_poses_size() const;
  private:
  int _internal_body_poses_size() const;
  public:
  void clear_body_poses();
  ::sapien::render_server::proto::Pose* mutable_body_poses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >*
      mutable_body_poses();
  private:
  const ::sapien::render_server::proto::Pose& _internal_body_poses(int index) const;
  ::sapien::render_server::proto::Pose* _internal_add_body_poses();
  public:
  const ::sapien::render_server::proto::Pose& body_poses(int index) const;
  ::sapien::render_server::proto::Pose* add_body_poses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >&
      body_poses() const;

  // repeated .sapien.render_server.proto.Pose camera_poses = 3;
  int camera_poses_size() const;
  private:
  int _internal_camera_poses_size() const;
  public:
  void clear_camera_poses();
  ::sapien::render_server::proto::Pose* mutable_camera_poses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >*
      mutable_camera_poses();
  private:
  const ::sapien::render_server::proto::Pose& _internal_camera_poses(int index) const;
  ::sapien::render_server::proto::Pose* _internal_add_camera_poses();
  public:
  const ::sapien::render_server::proto::Pose& camera_poses(int index) const;
  ::sapien::render_server::proto::Pose* add_camera_poses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >&
      camera_poses() const;

  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.UpdateRenderReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose > body_poses_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose > camera_poses_;
    uint64_t scene_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class BodyIdReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.BodyIdReq) */ {
 public:
  inline BodyIdReq() : BodyIdReq(nullptr) {}
  ~BodyIdReq() override;
  explicit PROTOBUF_CONSTEXPR BodyIdReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BodyIdReq(const BodyIdReq& from);
  BodyIdReq(BodyIdReq&& from) noexcept
    : BodyIdReq() {
    *this = ::std::move(from);
  }

  inline BodyIdReq& operator=(const BodyIdReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline BodyIdReq& operator=(BodyIdReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BodyIdReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const BodyIdReq* internal_default_instance() {
    return reinterpret_cast<const BodyIdReq*>(
               &_BodyIdReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(BodyIdReq& a, BodyIdReq& b) {
    a.Swap(&b);
  }
  inline void Swap(BodyIdReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BodyIdReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BodyIdReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BodyIdReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BodyIdReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BodyIdReq& from) {
    BodyIdReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BodyIdReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.BodyIdReq";
  }
  protected:
  explicit BodyIdReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kBodyIdFieldNumber = 2,
    kIdFieldNumber = 3,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 body_id = 2;
  void clear_body_id();
  uint64_t body_id() const;
  void set_body_id(uint64_t value);
  private:
  uint64_t _internal_body_id() const;
  void _internal_set_body_id(uint64_t value);
  public:

  // uint32 id = 3;
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.BodyIdReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t scene_id_;
    uint64_t body_id_;
    uint32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class BodyUint32Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.BodyUint32Req) */ {
 public:
  inline BodyUint32Req() : BodyUint32Req(nullptr) {}
  ~BodyUint32Req() override;
  explicit PROTOBUF_CONSTEXPR BodyUint32Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BodyUint32Req(const BodyUint32Req& from);
  BodyUint32Req(BodyUint32Req&& from) noexcept
    : BodyUint32Req() {
    *this = ::std::move(from);
  }

  inline BodyUint32Req& operator=(const BodyUint32Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline BodyUint32Req& operator=(BodyUint32Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BodyUint32Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const BodyUint32Req* internal_default_instance() {
    return reinterpret_cast<const BodyUint32Req*>(
               &_BodyUint32Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(BodyUint32Req& a, BodyUint32Req& b) {
    a.Swap(&b);
  }
  inline void Swap(BodyUint32Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BodyUint32Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BodyUint32Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BodyUint32Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BodyUint32Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BodyUint32Req& from) {
    BodyUint32Req::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BodyUint32Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.BodyUint32Req";
  }
  protected:
  explicit BodyUint32Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kBodyIdFieldNumber = 2,
    kIdFieldNumber = 3,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 body_id = 2;
  void clear_body_id();
  uint64_t body_id() const;
  void set_body_id(uint64_t value);
  private:
  uint64_t _internal_body_id() const;
  void _internal_set_body_id(uint64_t value);
  public:

  // uint32 id = 3;
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.BodyUint32Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t scene_id_;
    uint64_t body_id_;
    uint32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class BodyFloat32Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.BodyFloat32Req) */ {
 public:
  inline BodyFloat32Req() : BodyFloat32Req(nullptr) {}
  ~BodyFloat32Req() override;
  explicit PROTOBUF_CONSTEXPR BodyFloat32Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BodyFloat32Req(const BodyFloat32Req& from);
  BodyFloat32Req(BodyFloat32Req&& from) noexcept
    : BodyFloat32Req() {
    *this = ::std::move(from);
  }

  inline BodyFloat32Req& operator=(const BodyFloat32Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline BodyFloat32Req& operator=(BodyFloat32Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BodyFloat32Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const BodyFloat32Req* internal_default_instance() {
    return reinterpret_cast<const BodyFloat32Req*>(
               &_BodyFloat32Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(BodyFloat32Req& a, BodyFloat32Req& b) {
    a.Swap(&b);
  }
  inline void Swap(BodyFloat32Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BodyFloat32Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BodyFloat32Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BodyFloat32Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BodyFloat32Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BodyFloat32Req& from) {
    BodyFloat32Req::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BodyFloat32Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.BodyFloat32Req";
  }
  protected:
  explicit BodyFloat32Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kBodyIdFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 body_id = 2;
  void clear_body_id();
  uint64_t body_id() const;
  void set_body_id(uint64_t value);
  private:
  uint64_t _internal_body_id() const;
  void _internal_set_body_id(uint64_t value);
  public:

  // float value = 3;
  void clear_value();
  float value() const;
  void set_value(float value);
  private:
  float _internal_value() const;
  void _internal_set_value(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.BodyFloat32Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t scene_id_;
    uint64_t body_id_;
    float value_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class TakePictureReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.TakePictureReq) */ {
 public:
  inline TakePictureReq() : TakePictureReq(nullptr) {}
  ~TakePictureReq() override;
  explicit PROTOBUF_CONSTEXPR TakePictureReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TakePictureReq(const TakePictureReq& from);
  TakePictureReq(TakePictureReq&& from) noexcept
    : TakePictureReq() {
    *this = ::std::move(from);
  }

  inline TakePictureReq& operator=(const TakePictureReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline TakePictureReq& operator=(TakePictureReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TakePictureReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const TakePictureReq* internal_default_instance() {
    return reinterpret_cast<const TakePictureReq*>(
               &_TakePictureReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(TakePictureReq& a, TakePictureReq& b) {
    a.Swap(&b);
  }
  inline void Swap(TakePictureReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TakePictureReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TakePictureReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TakePictureReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TakePictureReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TakePictureReq& from) {
    TakePictureReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TakePictureReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.TakePictureReq";
  }
  protected:
  explicit TakePictureReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kCameraIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 camera_id = 2;
  void clear_camera_id();
  uint64_t camera_id() const;
  void set_camera_id(uint64_t value);
  private:
  uint64_t _internal_camera_id() const;
  void _internal_set_camera_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.TakePictureReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t scene_id_;
    uint64_t camera_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class UpdateRenderAndTakePicturesReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.UpdateRenderAndTakePicturesReq) */ {
 public:
  inline UpdateRenderAndTakePicturesReq() : UpdateRenderAndTakePicturesReq(nullptr) {}
  ~UpdateRenderAndTakePicturesReq() override;
  explicit PROTOBUF_CONSTEXPR UpdateRenderAndTakePicturesReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateRenderAndTakePicturesReq(const UpdateRenderAndTakePicturesReq& from);
  UpdateRenderAndTakePicturesReq(UpdateRenderAndTakePicturesReq&& from) noexcept
    : UpdateRenderAndTakePicturesReq() {
    *this = ::std::move(from);
  }

  inline UpdateRenderAndTakePicturesReq& operator=(const UpdateRenderAndTakePicturesReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRenderAndTakePicturesReq& operator=(UpdateRenderAndTakePicturesReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRenderAndTakePicturesReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRenderAndTakePicturesReq* internal_default_instance() {
    return reinterpret_cast<const UpdateRenderAndTakePicturesReq*>(
               &_UpdateRenderAndTakePicturesReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(UpdateRenderAndTakePicturesReq& a, UpdateRenderAndTakePicturesReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateRenderAndTakePicturesReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRenderAndTakePicturesReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRenderAndTakePicturesReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateRenderAndTakePicturesReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UpdateRenderAndTakePicturesReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UpdateRenderAndTakePicturesReq& from) {
    UpdateRenderAndTakePicturesReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateRenderAndTakePicturesReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.UpdateRenderAndTakePicturesReq";
  }
  protected:
  explicit UpdateRenderAndTakePicturesReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyPosesFieldNumber = 2,
    kCameraPosesFieldNumber = 3,
    kCameraIdsFieldNumber = 4,
    kSceneIdFieldNumber = 1,
  };
  // repeated .sapien.render_server.proto.Pose body_poses = 2;
  int body_poses_size() const;
  private:
  int _internal_body_poses_size() const;
  public:
  void clear_body_poses();
  ::sapien::render_server::proto::Pose* mutable_body_poses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >*
      mutable_body_poses();
  private:
  const ::sapien::render_server::proto::Pose& _internal_body_poses(int index) const;
  ::sapien::render_server::proto::Pose* _internal_add_body_poses();
  public:
  const ::sapien::render_server::proto::Pose& body_poses(int index) const;
  ::sapien::render_server::proto::Pose* add_body_poses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >&
      body_poses() const;

  // repeated .sapien.render_server.proto.Pose camera_poses = 3;
  int camera_poses_size() const;
  private:
  int _internal_camera_poses_size() const;
  public:
  void clear_camera_poses();
  ::sapien::render_server::proto::Pose* mutable_camera_poses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >*
      mutable_camera_poses();
  private:
  const ::sapien::render_server::proto::Pose& _internal_camera_poses(int index) const;
  ::sapien::render_server::proto::Pose* _internal_add_camera_poses();
  public:
  const ::sapien::render_server::proto::Pose& camera_poses(int index) const;
  ::sapien::render_server::proto::Pose* add_camera_poses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >&
      camera_poses() const;

  // repeated uint64 camera_ids = 4 [packed = true];
  int camera_ids_size() const;
  private:
  int _internal_camera_ids_size() const;
  public:
  void clear_camera_ids();
  private:
  uint64_t _internal_camera_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_camera_ids() const;
  void _internal_add_camera_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_camera_ids();
  public:
  uint64_t camera_ids(int index) const;
  void set_camera_ids(int index, uint64_t value);
  void add_camera_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      camera_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_camera_ids();

  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.UpdateRenderAndTakePicturesReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose > body_poses_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose > camera_poses_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > camera_ids_;
    mutable std::atomic<int> _camera_ids_cached_byte_size_;
    uint64_t scene_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CameraParamsReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.CameraParamsReq) */ {
 public:
  inline CameraParamsReq() : CameraParamsReq(nullptr) {}
  ~CameraParamsReq() override;
  explicit PROTOBUF_CONSTEXPR CameraParamsReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CameraParamsReq(const CameraParamsReq& from);
  CameraParamsReq(CameraParamsReq&& from) noexcept
    : CameraParamsReq() {
    *this = ::std::move(from);
  }

  inline CameraParamsReq& operator=(const CameraParamsReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraParamsReq& operator=(CameraParamsReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraParamsReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraParamsReq* internal_default_instance() {
    return reinterpret_cast<const CameraParamsReq*>(
               &_CameraParamsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CameraParamsReq& a, CameraParamsReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CameraParamsReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraParamsReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraParamsReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CameraParamsReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CameraParamsReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CameraParamsReq& from) {
    CameraParamsReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CameraParamsReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.CameraParamsReq";
  }
  protected:
  explicit CameraParamsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kCameraIdFieldNumber = 2,
    kNearFieldNumber = 3,
    kFarFieldNumber = 4,
    kFxFieldNumber = 5,
    kFyFieldNumber = 6,
    kCxFieldNumber = 7,
    kCyFieldNumber = 8,
    kSkewFieldNumber = 9,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 camera_id = 2;
  void clear_camera_id();
  uint64_t camera_id() const;
  void set_camera_id(uint64_t value);
  private:
  uint64_t _internal_camera_id() const;
  void _internal_set_camera_id(uint64_t value);
  public:

  // float near = 3;
  void clear_near();
  float near() const;
  void set_near(float value);
  private:
  float _internal_near() const;
  void _internal_set_near(float value);
  public:

  // float far = 4;
  void clear_far();
  float far() const;
  void set_far(float value);
  private:
  float _internal_far() const;
  void _internal_set_far(float value);
  public:

  // float fx = 5;
  void clear_fx();
  float fx() const;
  void set_fx(float value);
  private:
  float _internal_fx() const;
  void _internal_set_fx(float value);
  public:

  // float fy = 6;
  void clear_fy();
  float fy() const;
  void set_fy(float value);
  private:
  float _internal_fy() const;
  void _internal_set_fy(float value);
  public:

  // float cx = 7;
  void clear_cx();
  float cx() const;
  void set_cx(float value);
  private:
  float _internal_cx() const;
  void _internal_set_cx(float value);
  public:

  // float cy = 8;
  void clear_cy();
  float cy() const;
  void set_cy(float value);
  private:
  float _internal_cy() const;
  void _internal_set_cy(float value);
  public:

  // float skew = 9;
  void clear_skew();
  float skew() const;
  void set_skew(float value);
  private:
  float _internal_skew() const;
  void _internal_set_skew(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.CameraParamsReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t scene_id_;
    uint64_t camera_id_;
    float near_;
    float far_;
    float fx_;
    float fy_;
    float cx_;
    float cy_;
    float skew_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class BodyReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.render_server.proto.BodyReq) */ {
 public:
  inline BodyReq() : BodyReq(nullptr) {}
  ~BodyReq() override;
  explicit PROTOBUF_CONSTEXPR BodyReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BodyReq(const BodyReq& from);
  BodyReq(BodyReq&& from) noexcept
    : BodyReq() {
    *this = ::std::move(from);
  }

  inline BodyReq& operator=(const BodyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline BodyReq& operator=(BodyReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BodyReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const BodyReq* internal_default_instance() {
    return reinterpret_cast<const BodyReq*>(
               &_BodyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(BodyReq& a, BodyReq& b) {
    a.Swap(&b);
  }
  inline void Swap(BodyReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BodyReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BodyReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BodyReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BodyReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BodyReq& from) {
    BodyReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BodyReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.render_server.proto.BodyReq";
  }
  protected:
  explicit BodyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kBodyIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  uint64_t scene_id() const;
  void set_scene_id(uint64_t value);
  private:
  uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(uint64_t value);
  public:

  // uint64 body_id = 2;
  void clear_body_id();
  uint64_t body_id() const;
  void set_body_id(uint64_t value);
  private:
  uint64_t _internal_body_id() const;
  void _internal_set_body_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.render_server.proto.BodyReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t scene_id_;
    uint64_t body_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Empty

// -------------------------------------------------------------------

// Uint32

// uint32 value = 1;
inline void Uint32::clear_value() {
  _impl_.value_ = 0u;
}
inline uint32_t Uint32::_internal_value() const {
  return _impl_.value_;
}
inline uint32_t Uint32::value() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Uint32.value)
  return _internal_value();
}
inline void Uint32::_internal_set_value(uint32_t value) {
  
  _impl_.value_ = value;
}
inline void Uint32::set_value(uint32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Uint32.value)
}

// -------------------------------------------------------------------

// Index

// uint64 index = 1;
inline void Index::clear_index() {
  _impl_.index_ = uint64_t{0u};
}
inline uint64_t Index::_internal_index() const {
  return _impl_.index_;
}
inline uint64_t Index::index() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Index.index)
  return _internal_index();
}
inline void Index::_internal_set_index(uint64_t value) {
  
  _impl_.index_ = value;
}
inline void Index::set_index(uint64_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Index.index)
}

// -------------------------------------------------------------------

// Id

// uint64 id = 1;
inline void Id::clear_id() {
  _impl_.id_ = uint64_t{0u};
}
inline uint64_t Id::_internal_id() const {
  return _impl_.id_;
}
inline uint64_t Id::id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Id.id)
  return _internal_id();
}
inline void Id::_internal_set_id(uint64_t value) {
  
  _impl_.id_ = value;
}
inline void Id::set_id(uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Id.id)
}

// -------------------------------------------------------------------

// Vec3

// float x = 1;
inline void Vec3::clear_x() {
  _impl_.x_ = 0;
}
inline float Vec3::_internal_x() const {
  return _impl_.x_;
}
inline float Vec3::x() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Vec3.x)
  return _internal_x();
}
inline void Vec3::_internal_set_x(float value) {
  
  _impl_.x_ = value;
}
inline void Vec3::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Vec3.x)
}

// float y = 2;
inline void Vec3::clear_y() {
  _impl_.y_ = 0;
}
inline float Vec3::_internal_y() const {
  return _impl_.y_;
}
inline float Vec3::y() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Vec3.y)
  return _internal_y();
}
inline void Vec3::_internal_set_y(float value) {
  
  _impl_.y_ = value;
}
inline void Vec3::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Vec3.y)
}

// float z = 3;
inline void Vec3::clear_z() {
  _impl_.z_ = 0;
}
inline float Vec3::_internal_z() const {
  return _impl_.z_;
}
inline float Vec3::z() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Vec3.z)
  return _internal_z();
}
inline void Vec3::_internal_set_z(float value) {
  
  _impl_.z_ = value;
}
inline void Vec3::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Vec3.z)
}

// -------------------------------------------------------------------

// Vec4

// float x = 1;
inline void Vec4::clear_x() {
  _impl_.x_ = 0;
}
inline float Vec4::_internal_x() const {
  return _impl_.x_;
}
inline float Vec4::x() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Vec4.x)
  return _internal_x();
}
inline void Vec4::_internal_set_x(float value) {
  
  _impl_.x_ = value;
}
inline void Vec4::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Vec4.x)
}

// float y = 2;
inline void Vec4::clear_y() {
  _impl_.y_ = 0;
}
inline float Vec4::_internal_y() const {
  return _impl_.y_;
}
inline float Vec4::y() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Vec4.y)
  return _internal_y();
}
inline void Vec4::_internal_set_y(float value) {
  
  _impl_.y_ = value;
}
inline void Vec4::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Vec4.y)
}

// float z = 3;
inline void Vec4::clear_z() {
  _impl_.z_ = 0;
}
inline float Vec4::_internal_z() const {
  return _impl_.z_;
}
inline float Vec4::z() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Vec4.z)
  return _internal_z();
}
inline void Vec4::_internal_set_z(float value) {
  
  _impl_.z_ = value;
}
inline void Vec4::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Vec4.z)
}

// float w = 4;
inline void Vec4::clear_w() {
  _impl_.w_ = 0;
}
inline float Vec4::_internal_w() const {
  return _impl_.w_;
}
inline float Vec4::w() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Vec4.w)
  return _internal_w();
}
inline void Vec4::_internal_set_w(float value) {
  
  _impl_.w_ = value;
}
inline void Vec4::set_w(float value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Vec4.w)
}

// -------------------------------------------------------------------

// Quat

// float w = 1;
inline void Quat::clear_w() {
  _impl_.w_ = 0;
}
inline float Quat::_internal_w() const {
  return _impl_.w_;
}
inline float Quat::w() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Quat.w)
  return _internal_w();
}
inline void Quat::_internal_set_w(float value) {
  
  _impl_.w_ = value;
}
inline void Quat::set_w(float value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Quat.w)
}

// float x = 2;
inline void Quat::clear_x() {
  _impl_.x_ = 0;
}
inline float Quat::_internal_x() const {
  return _impl_.x_;
}
inline float Quat::x() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Quat.x)
  return _internal_x();
}
inline void Quat::_internal_set_x(float value) {
  
  _impl_.x_ = value;
}
inline void Quat::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Quat.x)
}

// float y = 3;
inline void Quat::clear_y() {
  _impl_.y_ = 0;
}
inline float Quat::_internal_y() const {
  return _impl_.y_;
}
inline float Quat::y() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Quat.y)
  return _internal_y();
}
inline void Quat::_internal_set_y(float value) {
  
  _impl_.y_ = value;
}
inline void Quat::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Quat.y)
}

// float z = 4;
inline void Quat::clear_z() {
  _impl_.z_ = 0;
}
inline float Quat::_internal_z() const {
  return _impl_.z_;
}
inline float Quat::z() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Quat.z)
  return _internal_z();
}
inline void Quat::_internal_set_z(float value) {
  
  _impl_.z_ = value;
}
inline void Quat::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.Quat.z)
}

// -------------------------------------------------------------------

// Pose

// .sapien.render_server.proto.Vec3 p = 1;
inline bool Pose::_internal_has_p() const {
  return this != internal_default_instance() && _impl_.p_ != nullptr;
}
inline bool Pose::has_p() const {
  return _internal_has_p();
}
inline void Pose::clear_p() {
  if (GetArenaForAllocation() == nullptr && _impl_.p_ != nullptr) {
    delete _impl_.p_;
  }
  _impl_.p_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec3& Pose::_internal_p() const {
  const ::sapien::render_server::proto::Vec3* p = _impl_.p_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec3&>(
      ::sapien::render_server::proto::_Vec3_default_instance_);
}
inline const ::sapien::render_server::proto::Vec3& Pose::p() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Pose.p)
  return _internal_p();
}
inline void Pose::unsafe_arena_set_allocated_p(
    ::sapien::render_server::proto::Vec3* p) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.p_);
  }
  _impl_.p_ = p;
  if (p) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.Pose.p)
}
inline ::sapien::render_server::proto::Vec3* Pose::release_p() {
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.p_;
  _impl_.p_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec3* Pose::unsafe_arena_release_p() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.Pose.p)
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.p_;
  _impl_.p_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec3* Pose::_internal_mutable_p() {
  
  if (_impl_.p_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec3>(GetArenaForAllocation());
    _impl_.p_ = p;
  }
  return _impl_.p_;
}
inline ::sapien::render_server::proto::Vec3* Pose::mutable_p() {
  ::sapien::render_server::proto::Vec3* _msg = _internal_mutable_p();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.Pose.p)
  return _msg;
}
inline void Pose::set_allocated_p(::sapien::render_server::proto::Vec3* p) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.p_;
  }
  if (p) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(p);
    if (message_arena != submessage_arena) {
      p = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, p, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.p_ = p;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.Pose.p)
}

// .sapien.render_server.proto.Quat q = 2;
inline bool Pose::_internal_has_q() const {
  return this != internal_default_instance() && _impl_.q_ != nullptr;
}
inline bool Pose::has_q() const {
  return _internal_has_q();
}
inline void Pose::clear_q() {
  if (GetArenaForAllocation() == nullptr && _impl_.q_ != nullptr) {
    delete _impl_.q_;
  }
  _impl_.q_ = nullptr;
}
inline const ::sapien::render_server::proto::Quat& Pose::_internal_q() const {
  const ::sapien::render_server::proto::Quat* p = _impl_.q_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Quat&>(
      ::sapien::render_server::proto::_Quat_default_instance_);
}
inline const ::sapien::render_server::proto::Quat& Pose::q() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.Pose.q)
  return _internal_q();
}
inline void Pose::unsafe_arena_set_allocated_q(
    ::sapien::render_server::proto::Quat* q) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.q_);
  }
  _impl_.q_ = q;
  if (q) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.Pose.q)
}
inline ::sapien::render_server::proto::Quat* Pose::release_q() {
  
  ::sapien::render_server::proto::Quat* temp = _impl_.q_;
  _impl_.q_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Quat* Pose::unsafe_arena_release_q() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.Pose.q)
  
  ::sapien::render_server::proto::Quat* temp = _impl_.q_;
  _impl_.q_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Quat* Pose::_internal_mutable_q() {
  
  if (_impl_.q_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Quat>(GetArenaForAllocation());
    _impl_.q_ = p;
  }
  return _impl_.q_;
}
inline ::sapien::render_server::proto::Quat* Pose::mutable_q() {
  ::sapien::render_server::proto::Quat* _msg = _internal_mutable_q();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.Pose.q)
  return _msg;
}
inline void Pose::set_allocated_q(::sapien::render_server::proto::Quat* q) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.q_;
  }
  if (q) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(q);
    if (message_arena != submessage_arena) {
      q = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, q, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.q_ = q;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.Pose.q)
}

// -------------------------------------------------------------------

// IdVec3

// uint64 id = 1;
inline void IdVec3::clear_id() {
  _impl_.id_ = uint64_t{0u};
}
inline uint64_t IdVec3::_internal_id() const {
  return _impl_.id_;
}
inline uint64_t IdVec3::id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.IdVec3.id)
  return _internal_id();
}
inline void IdVec3::_internal_set_id(uint64_t value) {
  
  _impl_.id_ = value;
}
inline void IdVec3::set_id(uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.IdVec3.id)
}

// .sapien.render_server.proto.Vec3 data = 2;
inline bool IdVec3::_internal_has_data() const {
  return this != internal_default_instance() && _impl_.data_ != nullptr;
}
inline bool IdVec3::has_data() const {
  return _internal_has_data();
}
inline void IdVec3::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec3& IdVec3::_internal_data() const {
  const ::sapien::render_server::proto::Vec3* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec3&>(
      ::sapien::render_server::proto::_Vec3_default_instance_);
}
inline const ::sapien::render_server::proto::Vec3& IdVec3::data() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.IdVec3.data)
  return _internal_data();
}
inline void IdVec3::unsafe_arena_set_allocated_data(
    ::sapien::render_server::proto::Vec3* data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.IdVec3.data)
}
inline ::sapien::render_server::proto::Vec3* IdVec3::release_data() {
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec3* IdVec3::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.IdVec3.data)
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec3* IdVec3::_internal_mutable_data() {
  
  if (_impl_.data_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec3>(GetArenaForAllocation());
    _impl_.data_ = p;
  }
  return _impl_.data_;
}
inline ::sapien::render_server::proto::Vec3* IdVec3::mutable_data() {
  ::sapien::render_server::proto::Vec3* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.IdVec3.data)
  return _msg;
}
inline void IdVec3::set_allocated_data(::sapien::render_server::proto::Vec3* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(data);
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.data_ = data;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.IdVec3.data)
}

// -------------------------------------------------------------------

// IdVec4

// uint64 id = 1;
inline void IdVec4::clear_id() {
  _impl_.id_ = uint64_t{0u};
}
inline uint64_t IdVec4::_internal_id() const {
  return _impl_.id_;
}
inline uint64_t IdVec4::id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.IdVec4.id)
  return _internal_id();
}
inline void IdVec4::_internal_set_id(uint64_t value) {
  
  _impl_.id_ = value;
}
inline void IdVec4::set_id(uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.IdVec4.id)
}

// .sapien.render_server.proto.Vec4 data = 2;
inline bool IdVec4::_internal_has_data() const {
  return this != internal_default_instance() && _impl_.data_ != nullptr;
}
inline bool IdVec4::has_data() const {
  return _internal_has_data();
}
inline void IdVec4::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec4& IdVec4::_internal_data() const {
  const ::sapien::render_server::proto::Vec4* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec4&>(
      ::sapien::render_server::proto::_Vec4_default_instance_);
}
inline const ::sapien::render_server::proto::Vec4& IdVec4::data() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.IdVec4.data)
  return _internal_data();
}
inline void IdVec4::unsafe_arena_set_allocated_data(
    ::sapien::render_server::proto::Vec4* data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.IdVec4.data)
}
inline ::sapien::render_server::proto::Vec4* IdVec4::release_data() {
  
  ::sapien::render_server::proto::Vec4* temp = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec4* IdVec4::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.IdVec4.data)
  
  ::sapien::render_server::proto::Vec4* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec4* IdVec4::_internal_mutable_data() {
  
  if (_impl_.data_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec4>(GetArenaForAllocation());
    _impl_.data_ = p;
  }
  return _impl_.data_;
}
inline ::sapien::render_server::proto::Vec4* IdVec4::mutable_data() {
  ::sapien::render_server::proto::Vec4* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.IdVec4.data)
  return _msg;
}
inline void IdVec4::set_allocated_data(::sapien::render_server::proto::Vec4* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(data);
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.data_ = data;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.IdVec4.data)
}

// -------------------------------------------------------------------

// IdFloat

// uint64 id = 1;
inline void IdFloat::clear_id() {
  _impl_.id_ = uint64_t{0u};
}
inline uint64_t IdFloat::_internal_id() const {
  return _impl_.id_;
}
inline uint64_t IdFloat::id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.IdFloat.id)
  return _internal_id();
}
inline void IdFloat::_internal_set_id(uint64_t value) {
  
  _impl_.id_ = value;
}
inline void IdFloat::set_id(uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.IdFloat.id)
}

// float data = 2;
inline void IdFloat::clear_data() {
  _impl_.data_ = 0;
}
inline float IdFloat::_internal_data() const {
  return _impl_.data_;
}
inline float IdFloat::data() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.IdFloat.data)
  return _internal_data();
}
inline void IdFloat::_internal_set_data(float value) {
  
  _impl_.data_ = value;
}
inline void IdFloat::set_data(float value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.IdFloat.data)
}

// -------------------------------------------------------------------

// AddBodyMeshReq

// uint64 scene_id = 1;
inline void AddBodyMeshReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t AddBodyMeshReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t AddBodyMeshReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyMeshReq.scene_id)
  return _internal_scene_id();
}
inline void AddBodyMeshReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void AddBodyMeshReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddBodyMeshReq.scene_id)
}

// string filename = 2;
inline void AddBodyMeshReq::clear_filename() {
  _impl_.filename_.ClearToEmpty();
}
inline const std::string& AddBodyMeshReq::filename() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyMeshReq.filename)
  return _internal_filename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void AddBodyMeshReq::set_filename(ArgT0&& arg0, ArgT... args) {
 
 _impl_.filename_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddBodyMeshReq.filename)
}
inline std::string* AddBodyMeshReq::mutable_filename() {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.AddBodyMeshReq.filename)
  return _s;
}
inline const std::string& AddBodyMeshReq::_internal_filename() const {
  return _impl_.filename_.Get();
}
inline void AddBodyMeshReq::_internal_set_filename(const std::string& value) {
  
  _impl_.filename_.Set(value, GetArenaForAllocation());
}
inline std::string* AddBodyMeshReq::_internal_mutable_filename() {
  
  return _impl_.filename_.Mutable(GetArenaForAllocation());
}
inline std::string* AddBodyMeshReq::release_filename() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.AddBodyMeshReq.filename)
  return _impl_.filename_.Release();
}
inline void AddBodyMeshReq::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    
  } else {
    
  }
  _impl_.filename_.SetAllocated(filename, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.filename_.IsDefault()) {
    _impl_.filename_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.AddBodyMeshReq.filename)
}

// .sapien.render_server.proto.Vec3 scale = 3;
inline bool AddBodyMeshReq::_internal_has_scale() const {
  return this != internal_default_instance() && _impl_.scale_ != nullptr;
}
inline bool AddBodyMeshReq::has_scale() const {
  return _internal_has_scale();
}
inline void AddBodyMeshReq::clear_scale() {
  if (GetArenaForAllocation() == nullptr && _impl_.scale_ != nullptr) {
    delete _impl_.scale_;
  }
  _impl_.scale_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec3& AddBodyMeshReq::_internal_scale() const {
  const ::sapien::render_server::proto::Vec3* p = _impl_.scale_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec3&>(
      ::sapien::render_server::proto::_Vec3_default_instance_);
}
inline const ::sapien::render_server::proto::Vec3& AddBodyMeshReq::scale() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyMeshReq.scale)
  return _internal_scale();
}
inline void AddBodyMeshReq::unsafe_arena_set_allocated_scale(
    ::sapien::render_server::proto::Vec3* scale) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.scale_);
  }
  _impl_.scale_ = scale;
  if (scale) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.AddBodyMeshReq.scale)
}
inline ::sapien::render_server::proto::Vec3* AddBodyMeshReq::release_scale() {
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.scale_;
  _impl_.scale_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddBodyMeshReq::unsafe_arena_release_scale() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.AddBodyMeshReq.scale)
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.scale_;
  _impl_.scale_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddBodyMeshReq::_internal_mutable_scale() {
  
  if (_impl_.scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec3>(GetArenaForAllocation());
    _impl_.scale_ = p;
  }
  return _impl_.scale_;
}
inline ::sapien::render_server::proto::Vec3* AddBodyMeshReq::mutable_scale() {
  ::sapien::render_server::proto::Vec3* _msg = _internal_mutable_scale();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.AddBodyMeshReq.scale)
  return _msg;
}
inline void AddBodyMeshReq::set_allocated_scale(::sapien::render_server::proto::Vec3* scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.scale_;
  }
  if (scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(scale);
    if (message_arena != submessage_arena) {
      scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scale, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.scale_ = scale;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.AddBodyMeshReq.scale)
}

// uint64 segmentation0 = 4;
inline void AddBodyMeshReq::clear_segmentation0() {
  _impl_.segmentation0_ = uint64_t{0u};
}
inline uint64_t AddBodyMeshReq::_internal_segmentation0() const {
  return _impl_.segmentation0_;
}
inline uint64_t AddBodyMeshReq::segmentation0() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyMeshReq.segmentation0)
  return _internal_segmentation0();
}
inline void AddBodyMeshReq::_internal_set_segmentation0(uint64_t value) {
  
  _impl_.segmentation0_ = value;
}
inline void AddBodyMeshReq::set_segmentation0(uint64_t value) {
  _internal_set_segmentation0(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddBodyMeshReq.segmentation0)
}

// uint64 segmentation1 = 5;
inline void AddBodyMeshReq::clear_segmentation1() {
  _impl_.segmentation1_ = uint64_t{0u};
}
inline uint64_t AddBodyMeshReq::_internal_segmentation1() const {
  return _impl_.segmentation1_;
}
inline uint64_t AddBodyMeshReq::segmentation1() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyMeshReq.segmentation1)
  return _internal_segmentation1();
}
inline void AddBodyMeshReq::_internal_set_segmentation1(uint64_t value) {
  
  _impl_.segmentation1_ = value;
}
inline void AddBodyMeshReq::set_segmentation1(uint64_t value) {
  _internal_set_segmentation1(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddBodyMeshReq.segmentation1)
}

// -------------------------------------------------------------------

// AddBodyPrimitiveReq

// uint64 scene_id = 1;
inline void AddBodyPrimitiveReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t AddBodyPrimitiveReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t AddBodyPrimitiveReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyPrimitiveReq.scene_id)
  return _internal_scene_id();
}
inline void AddBodyPrimitiveReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void AddBodyPrimitiveReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddBodyPrimitiveReq.scene_id)
}

// .sapien.render_server.proto.PrimitiveType type = 2;
inline void AddBodyPrimitiveReq::clear_type() {
  _impl_.type_ = 0;
}
inline ::sapien::render_server::proto::PrimitiveType AddBodyPrimitiveReq::_internal_type() const {
  return static_cast< ::sapien::render_server::proto::PrimitiveType >(_impl_.type_);
}
inline ::sapien::render_server::proto::PrimitiveType AddBodyPrimitiveReq::type() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyPrimitiveReq.type)
  return _internal_type();
}
inline void AddBodyPrimitiveReq::_internal_set_type(::sapien::render_server::proto::PrimitiveType value) {
  
  _impl_.type_ = value;
}
inline void AddBodyPrimitiveReq::set_type(::sapien::render_server::proto::PrimitiveType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddBodyPrimitiveReq.type)
}

// .sapien.render_server.proto.Vec3 scale = 3;
inline bool AddBodyPrimitiveReq::_internal_has_scale() const {
  return this != internal_default_instance() && _impl_.scale_ != nullptr;
}
inline bool AddBodyPrimitiveReq::has_scale() const {
  return _internal_has_scale();
}
inline void AddBodyPrimitiveReq::clear_scale() {
  if (GetArenaForAllocation() == nullptr && _impl_.scale_ != nullptr) {
    delete _impl_.scale_;
  }
  _impl_.scale_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec3& AddBodyPrimitiveReq::_internal_scale() const {
  const ::sapien::render_server::proto::Vec3* p = _impl_.scale_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec3&>(
      ::sapien::render_server::proto::_Vec3_default_instance_);
}
inline const ::sapien::render_server::proto::Vec3& AddBodyPrimitiveReq::scale() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyPrimitiveReq.scale)
  return _internal_scale();
}
inline void AddBodyPrimitiveReq::unsafe_arena_set_allocated_scale(
    ::sapien::render_server::proto::Vec3* scale) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.scale_);
  }
  _impl_.scale_ = scale;
  if (scale) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.AddBodyPrimitiveReq.scale)
}
inline ::sapien::render_server::proto::Vec3* AddBodyPrimitiveReq::release_scale() {
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.scale_;
  _impl_.scale_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddBodyPrimitiveReq::unsafe_arena_release_scale() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.AddBodyPrimitiveReq.scale)
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.scale_;
  _impl_.scale_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddBodyPrimitiveReq::_internal_mutable_scale() {
  
  if (_impl_.scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec3>(GetArenaForAllocation());
    _impl_.scale_ = p;
  }
  return _impl_.scale_;
}
inline ::sapien::render_server::proto::Vec3* AddBodyPrimitiveReq::mutable_scale() {
  ::sapien::render_server::proto::Vec3* _msg = _internal_mutable_scale();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.AddBodyPrimitiveReq.scale)
  return _msg;
}
inline void AddBodyPrimitiveReq::set_allocated_scale(::sapien::render_server::proto::Vec3* scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.scale_;
  }
  if (scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(scale);
    if (message_arena != submessage_arena) {
      scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scale, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.scale_ = scale;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.AddBodyPrimitiveReq.scale)
}

// uint64 material = 4;
inline void AddBodyPrimitiveReq::clear_material() {
  _impl_.material_ = uint64_t{0u};
}
inline uint64_t AddBodyPrimitiveReq::_internal_material() const {
  return _impl_.material_;
}
inline uint64_t AddBodyPrimitiveReq::material() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyPrimitiveReq.material)
  return _internal_material();
}
inline void AddBodyPrimitiveReq::_internal_set_material(uint64_t value) {
  
  _impl_.material_ = value;
}
inline void AddBodyPrimitiveReq::set_material(uint64_t value) {
  _internal_set_material(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddBodyPrimitiveReq.material)
}

// uint64 segmentation0 = 5;
inline void AddBodyPrimitiveReq::clear_segmentation0() {
  _impl_.segmentation0_ = uint64_t{0u};
}
inline uint64_t AddBodyPrimitiveReq::_internal_segmentation0() const {
  return _impl_.segmentation0_;
}
inline uint64_t AddBodyPrimitiveReq::segmentation0() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyPrimitiveReq.segmentation0)
  return _internal_segmentation0();
}
inline void AddBodyPrimitiveReq::_internal_set_segmentation0(uint64_t value) {
  
  _impl_.segmentation0_ = value;
}
inline void AddBodyPrimitiveReq::set_segmentation0(uint64_t value) {
  _internal_set_segmentation0(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddBodyPrimitiveReq.segmentation0)
}

// uint64 segmentation1 = 6;
inline void AddBodyPrimitiveReq::clear_segmentation1() {
  _impl_.segmentation1_ = uint64_t{0u};
}
inline uint64_t AddBodyPrimitiveReq::_internal_segmentation1() const {
  return _impl_.segmentation1_;
}
inline uint64_t AddBodyPrimitiveReq::segmentation1() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddBodyPrimitiveReq.segmentation1)
  return _internal_segmentation1();
}
inline void AddBodyPrimitiveReq::_internal_set_segmentation1(uint64_t value) {
  
  _impl_.segmentation1_ = value;
}
inline void AddBodyPrimitiveReq::set_segmentation1(uint64_t value) {
  _internal_set_segmentation1(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddBodyPrimitiveReq.segmentation1)
}

// -------------------------------------------------------------------

// RemoveBodyReq

// uint64 scene_id = 1;
inline void RemoveBodyReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t RemoveBodyReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t RemoveBodyReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.RemoveBodyReq.scene_id)
  return _internal_scene_id();
}
inline void RemoveBodyReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void RemoveBodyReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.RemoveBodyReq.scene_id)
}

// uint64 body_id = 2;
inline void RemoveBodyReq::clear_body_id() {
  _impl_.body_id_ = uint64_t{0u};
}
inline uint64_t RemoveBodyReq::_internal_body_id() const {
  return _impl_.body_id_;
}
inline uint64_t RemoveBodyReq::body_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.RemoveBodyReq.body_id)
  return _internal_body_id();
}
inline void RemoveBodyReq::_internal_set_body_id(uint64_t value) {
  
  _impl_.body_id_ = value;
}
inline void RemoveBodyReq::set_body_id(uint64_t value) {
  _internal_set_body_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.RemoveBodyReq.body_id)
}

// -------------------------------------------------------------------

// AddCameraReq

// uint64 scene_id = 1;
inline void AddCameraReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t AddCameraReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t AddCameraReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.scene_id)
  return _internal_scene_id();
}
inline void AddCameraReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void AddCameraReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.scene_id)
}

// uint32 width = 2;
inline void AddCameraReq::clear_width() {
  _impl_.width_ = 0u;
}
inline uint32_t AddCameraReq::_internal_width() const {
  return _impl_.width_;
}
inline uint32_t AddCameraReq::width() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.width)
  return _internal_width();
}
inline void AddCameraReq::_internal_set_width(uint32_t value) {
  
  _impl_.width_ = value;
}
inline void AddCameraReq::set_width(uint32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.width)
}

// uint32 height = 3;
inline void AddCameraReq::clear_height() {
  _impl_.height_ = 0u;
}
inline uint32_t AddCameraReq::_internal_height() const {
  return _impl_.height_;
}
inline uint32_t AddCameraReq::height() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.height)
  return _internal_height();
}
inline void AddCameraReq::_internal_set_height(uint32_t value) {
  
  _impl_.height_ = value;
}
inline void AddCameraReq::set_height(uint32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.height)
}

// float near = 4;
inline void AddCameraReq::clear_near() {
  _impl_.near_ = 0;
}
inline float AddCameraReq::_internal_near() const {
  return _impl_.near_;
}
inline float AddCameraReq::near() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.near)
  return _internal_near();
}
inline void AddCameraReq::_internal_set_near(float value) {
  
  _impl_.near_ = value;
}
inline void AddCameraReq::set_near(float value) {
  _internal_set_near(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.near)
}

// float far = 5;
inline void AddCameraReq::clear_far() {
  _impl_.far_ = 0;
}
inline float AddCameraReq::_internal_far() const {
  return _impl_.far_;
}
inline float AddCameraReq::far() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.far)
  return _internal_far();
}
inline void AddCameraReq::_internal_set_far(float value) {
  
  _impl_.far_ = value;
}
inline void AddCameraReq::set_far(float value) {
  _internal_set_far(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.far)
}

// float fx = 6;
inline void AddCameraReq::clear_fx() {
  _impl_.fx_ = 0;
}
inline float AddCameraReq::_internal_fx() const {
  return _impl_.fx_;
}
inline float AddCameraReq::fx() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.fx)
  return _internal_fx();
}
inline void AddCameraReq::_internal_set_fx(float value) {
  
  _impl_.fx_ = value;
}
inline void AddCameraReq::set_fx(float value) {
  _internal_set_fx(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.fx)
}

// float fy = 7;
inline void AddCameraReq::clear_fy() {
  _impl_.fy_ = 0;
}
inline float AddCameraReq::_internal_fy() const {
  return _impl_.fy_;
}
inline float AddCameraReq::fy() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.fy)
  return _internal_fy();
}
inline void AddCameraReq::_internal_set_fy(float value) {
  
  _impl_.fy_ = value;
}
inline void AddCameraReq::set_fy(float value) {
  _internal_set_fy(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.fy)
}

// float cx = 8;
inline void AddCameraReq::clear_cx() {
  _impl_.cx_ = 0;
}
inline float AddCameraReq::_internal_cx() const {
  return _impl_.cx_;
}
inline float AddCameraReq::cx() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.cx)
  return _internal_cx();
}
inline void AddCameraReq::_internal_set_cx(float value) {
  
  _impl_.cx_ = value;
}
inline void AddCameraReq::set_cx(float value) {
  _internal_set_cx(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.cx)
}

// float cy = 9;
inline void AddCameraReq::clear_cy() {
  _impl_.cy_ = 0;
}
inline float AddCameraReq::_internal_cy() const {
  return _impl_.cy_;
}
inline float AddCameraReq::cy() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.cy)
  return _internal_cy();
}
inline void AddCameraReq::_internal_set_cy(float value) {
  
  _impl_.cy_ = value;
}
inline void AddCameraReq::set_cy(float value) {
  _internal_set_cy(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.cy)
}

// float skew = 10;
inline void AddCameraReq::clear_skew() {
  _impl_.skew_ = 0;
}
inline float AddCameraReq::_internal_skew() const {
  return _impl_.skew_;
}
inline float AddCameraReq::skew() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.skew)
  return _internal_skew();
}
inline void AddCameraReq::_internal_set_skew(float value) {
  
  _impl_.skew_ = value;
}
inline void AddCameraReq::set_skew(float value) {
  _internal_set_skew(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.skew)
}

// string shader = 11;
inline void AddCameraReq::clear_shader() {
  _impl_.shader_.ClearToEmpty();
}
inline const std::string& AddCameraReq::shader() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddCameraReq.shader)
  return _internal_shader();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void AddCameraReq::set_shader(ArgT0&& arg0, ArgT... args) {
 
 _impl_.shader_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddCameraReq.shader)
}
inline std::string* AddCameraReq::mutable_shader() {
  std::string* _s = _internal_mutable_shader();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.AddCameraReq.shader)
  return _s;
}
inline const std::string& AddCameraReq::_internal_shader() const {
  return _impl_.shader_.Get();
}
inline void AddCameraReq::_internal_set_shader(const std::string& value) {
  
  _impl_.shader_.Set(value, GetArenaForAllocation());
}
inline std::string* AddCameraReq::_internal_mutable_shader() {
  
  return _impl_.shader_.Mutable(GetArenaForAllocation());
}
inline std::string* AddCameraReq::release_shader() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.AddCameraReq.shader)
  return _impl_.shader_.Release();
}
inline void AddCameraReq::set_allocated_shader(std::string* shader) {
  if (shader != nullptr) {
    
  } else {
    
  }
  _impl_.shader_.SetAllocated(shader, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.shader_.IsDefault()) {
    _impl_.shader_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.AddCameraReq.shader)
}

// -------------------------------------------------------------------

// RemoveCameraReq

// uint64 scene_id = 1;
inline void RemoveCameraReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t RemoveCameraReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t RemoveCameraReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.RemoveCameraReq.scene_id)
  return _internal_scene_id();
}
inline void RemoveCameraReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void RemoveCameraReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.RemoveCameraReq.scene_id)
}

// uint64 camera_id = 2;
inline void RemoveCameraReq::clear_camera_id() {
  _impl_.camera_id_ = uint64_t{0u};
}
inline uint64_t RemoveCameraReq::_internal_camera_id() const {
  return _impl_.camera_id_;
}
inline uint64_t RemoveCameraReq::camera_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.RemoveCameraReq.camera_id)
  return _internal_camera_id();
}
inline void RemoveCameraReq::_internal_set_camera_id(uint64_t value) {
  
  _impl_.camera_id_ = value;
}
inline void RemoveCameraReq::set_camera_id(uint64_t value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.RemoveCameraReq.camera_id)
}

// -------------------------------------------------------------------

// AddPointLightReq

// uint64 scene_id = 1;
inline void AddPointLightReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t AddPointLightReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t AddPointLightReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddPointLightReq.scene_id)
  return _internal_scene_id();
}
inline void AddPointLightReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void AddPointLightReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddPointLightReq.scene_id)
}

// .sapien.render_server.proto.Vec3 position = 2;
inline bool AddPointLightReq::_internal_has_position() const {
  return this != internal_default_instance() && _impl_.position_ != nullptr;
}
inline bool AddPointLightReq::has_position() const {
  return _internal_has_position();
}
inline void AddPointLightReq::clear_position() {
  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec3& AddPointLightReq::_internal_position() const {
  const ::sapien::render_server::proto::Vec3* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec3&>(
      ::sapien::render_server::proto::_Vec3_default_instance_);
}
inline const ::sapien::render_server::proto::Vec3& AddPointLightReq::position() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddPointLightReq.position)
  return _internal_position();
}
inline void AddPointLightReq::unsafe_arena_set_allocated_position(
    ::sapien::render_server::proto::Vec3* position) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.AddPointLightReq.position)
}
inline ::sapien::render_server::proto::Vec3* AddPointLightReq::release_position() {
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.position_;
  _impl_.position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddPointLightReq::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.AddPointLightReq.position)
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddPointLightReq::_internal_mutable_position() {
  
  if (_impl_.position_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec3>(GetArenaForAllocation());
    _impl_.position_ = p;
  }
  return _impl_.position_;
}
inline ::sapien::render_server::proto::Vec3* AddPointLightReq::mutable_position() {
  ::sapien::render_server::proto::Vec3* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.AddPointLightReq.position)
  return _msg;
}
inline void AddPointLightReq::set_allocated_position(::sapien::render_server::proto::Vec3* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.position_;
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(position);
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.position_ = position;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.AddPointLightReq.position)
}

// .sapien.render_server.proto.Vec3 color = 3;
inline bool AddPointLightReq::_internal_has_color() const {
  return this != internal_default_instance() && _impl_.color_ != nullptr;
}
inline bool AddPointLightReq::has_color() const {
  return _internal_has_color();
}
inline void AddPointLightReq::clear_color() {
  if (GetArenaForAllocation() == nullptr && _impl_.color_ != nullptr) {
    delete _impl_.color_;
  }
  _impl_.color_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec3& AddPointLightReq::_internal_color() const {
  const ::sapien::render_server::proto::Vec3* p = _impl_.color_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec3&>(
      ::sapien::render_server::proto::_Vec3_default_instance_);
}
inline const ::sapien::render_server::proto::Vec3& AddPointLightReq::color() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddPointLightReq.color)
  return _internal_color();
}
inline void AddPointLightReq::unsafe_arena_set_allocated_color(
    ::sapien::render_server::proto::Vec3* color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_);
  }
  _impl_.color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.AddPointLightReq.color)
}
inline ::sapien::render_server::proto::Vec3* AddPointLightReq::release_color() {
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.color_;
  _impl_.color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddPointLightReq::unsafe_arena_release_color() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.AddPointLightReq.color)
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.color_;
  _impl_.color_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddPointLightReq::_internal_mutable_color() {
  
  if (_impl_.color_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec3>(GetArenaForAllocation());
    _impl_.color_ = p;
  }
  return _impl_.color_;
}
inline ::sapien::render_server::proto::Vec3* AddPointLightReq::mutable_color() {
  ::sapien::render_server::proto::Vec3* _msg = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.AddPointLightReq.color)
  return _msg;
}
inline void AddPointLightReq::set_allocated_color(::sapien::render_server::proto::Vec3* color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.color_;
  }
  if (color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(color);
    if (message_arena != submessage_arena) {
      color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.color_ = color;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.AddPointLightReq.color)
}

// bool shadow = 4;
inline void AddPointLightReq::clear_shadow() {
  _impl_.shadow_ = false;
}
inline bool AddPointLightReq::_internal_shadow() const {
  return _impl_.shadow_;
}
inline bool AddPointLightReq::shadow() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddPointLightReq.shadow)
  return _internal_shadow();
}
inline void AddPointLightReq::_internal_set_shadow(bool value) {
  
  _impl_.shadow_ = value;
}
inline void AddPointLightReq::set_shadow(bool value) {
  _internal_set_shadow(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddPointLightReq.shadow)
}

// float shadow_near = 5;
inline void AddPointLightReq::clear_shadow_near() {
  _impl_.shadow_near_ = 0;
}
inline float AddPointLightReq::_internal_shadow_near() const {
  return _impl_.shadow_near_;
}
inline float AddPointLightReq::shadow_near() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddPointLightReq.shadow_near)
  return _internal_shadow_near();
}
inline void AddPointLightReq::_internal_set_shadow_near(float value) {
  
  _impl_.shadow_near_ = value;
}
inline void AddPointLightReq::set_shadow_near(float value) {
  _internal_set_shadow_near(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddPointLightReq.shadow_near)
}

// float shadow_far = 6;
inline void AddPointLightReq::clear_shadow_far() {
  _impl_.shadow_far_ = 0;
}
inline float AddPointLightReq::_internal_shadow_far() const {
  return _impl_.shadow_far_;
}
inline float AddPointLightReq::shadow_far() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddPointLightReq.shadow_far)
  return _internal_shadow_far();
}
inline void AddPointLightReq::_internal_set_shadow_far(float value) {
  
  _impl_.shadow_far_ = value;
}
inline void AddPointLightReq::set_shadow_far(float value) {
  _internal_set_shadow_far(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddPointLightReq.shadow_far)
}

// int32 shadow_map_size = 7;
inline void AddPointLightReq::clear_shadow_map_size() {
  _impl_.shadow_map_size_ = 0;
}
inline int32_t AddPointLightReq::_internal_shadow_map_size() const {
  return _impl_.shadow_map_size_;
}
inline int32_t AddPointLightReq::shadow_map_size() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddPointLightReq.shadow_map_size)
  return _internal_shadow_map_size();
}
inline void AddPointLightReq::_internal_set_shadow_map_size(int32_t value) {
  
  _impl_.shadow_map_size_ = value;
}
inline void AddPointLightReq::set_shadow_map_size(int32_t value) {
  _internal_set_shadow_map_size(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddPointLightReq.shadow_map_size)
}

// -------------------------------------------------------------------

// AddDirectionalLightReq

// uint64 scene_id = 1;
inline void AddDirectionalLightReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t AddDirectionalLightReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t AddDirectionalLightReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddDirectionalLightReq.scene_id)
  return _internal_scene_id();
}
inline void AddDirectionalLightReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void AddDirectionalLightReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddDirectionalLightReq.scene_id)
}

// .sapien.render_server.proto.Vec3 direction = 2;
inline bool AddDirectionalLightReq::_internal_has_direction() const {
  return this != internal_default_instance() && _impl_.direction_ != nullptr;
}
inline bool AddDirectionalLightReq::has_direction() const {
  return _internal_has_direction();
}
inline void AddDirectionalLightReq::clear_direction() {
  if (GetArenaForAllocation() == nullptr && _impl_.direction_ != nullptr) {
    delete _impl_.direction_;
  }
  _impl_.direction_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec3& AddDirectionalLightReq::_internal_direction() const {
  const ::sapien::render_server::proto::Vec3* p = _impl_.direction_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec3&>(
      ::sapien::render_server::proto::_Vec3_default_instance_);
}
inline const ::sapien::render_server::proto::Vec3& AddDirectionalLightReq::direction() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddDirectionalLightReq.direction)
  return _internal_direction();
}
inline void AddDirectionalLightReq::unsafe_arena_set_allocated_direction(
    ::sapien::render_server::proto::Vec3* direction) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.direction_);
  }
  _impl_.direction_ = direction;
  if (direction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.AddDirectionalLightReq.direction)
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::release_direction() {
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.direction_;
  _impl_.direction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::unsafe_arena_release_direction() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.AddDirectionalLightReq.direction)
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.direction_;
  _impl_.direction_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::_internal_mutable_direction() {
  
  if (_impl_.direction_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec3>(GetArenaForAllocation());
    _impl_.direction_ = p;
  }
  return _impl_.direction_;
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::mutable_direction() {
  ::sapien::render_server::proto::Vec3* _msg = _internal_mutable_direction();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.AddDirectionalLightReq.direction)
  return _msg;
}
inline void AddDirectionalLightReq::set_allocated_direction(::sapien::render_server::proto::Vec3* direction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.direction_;
  }
  if (direction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(direction);
    if (message_arena != submessage_arena) {
      direction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, direction, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.direction_ = direction;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.AddDirectionalLightReq.direction)
}

// .sapien.render_server.proto.Vec3 color = 3;
inline bool AddDirectionalLightReq::_internal_has_color() const {
  return this != internal_default_instance() && _impl_.color_ != nullptr;
}
inline bool AddDirectionalLightReq::has_color() const {
  return _internal_has_color();
}
inline void AddDirectionalLightReq::clear_color() {
  if (GetArenaForAllocation() == nullptr && _impl_.color_ != nullptr) {
    delete _impl_.color_;
  }
  _impl_.color_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec3& AddDirectionalLightReq::_internal_color() const {
  const ::sapien::render_server::proto::Vec3* p = _impl_.color_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec3&>(
      ::sapien::render_server::proto::_Vec3_default_instance_);
}
inline const ::sapien::render_server::proto::Vec3& AddDirectionalLightReq::color() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddDirectionalLightReq.color)
  return _internal_color();
}
inline void AddDirectionalLightReq::unsafe_arena_set_allocated_color(
    ::sapien::render_server::proto::Vec3* color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_);
  }
  _impl_.color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.AddDirectionalLightReq.color)
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::release_color() {
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.color_;
  _impl_.color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::unsafe_arena_release_color() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.AddDirectionalLightReq.color)
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.color_;
  _impl_.color_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::_internal_mutable_color() {
  
  if (_impl_.color_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec3>(GetArenaForAllocation());
    _impl_.color_ = p;
  }
  return _impl_.color_;
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::mutable_color() {
  ::sapien::render_server::proto::Vec3* _msg = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.AddDirectionalLightReq.color)
  return _msg;
}
inline void AddDirectionalLightReq::set_allocated_color(::sapien::render_server::proto::Vec3* color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.color_;
  }
  if (color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(color);
    if (message_arena != submessage_arena) {
      color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.color_ = color;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.AddDirectionalLightReq.color)
}

// bool shadow = 4;
inline void AddDirectionalLightReq::clear_shadow() {
  _impl_.shadow_ = false;
}
inline bool AddDirectionalLightReq::_internal_shadow() const {
  return _impl_.shadow_;
}
inline bool AddDirectionalLightReq::shadow() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddDirectionalLightReq.shadow)
  return _internal_shadow();
}
inline void AddDirectionalLightReq::_internal_set_shadow(bool value) {
  
  _impl_.shadow_ = value;
}
inline void AddDirectionalLightReq::set_shadow(bool value) {
  _internal_set_shadow(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddDirectionalLightReq.shadow)
}

// .sapien.render_server.proto.Vec3 position = 5;
inline bool AddDirectionalLightReq::_internal_has_position() const {
  return this != internal_default_instance() && _impl_.position_ != nullptr;
}
inline bool AddDirectionalLightReq::has_position() const {
  return _internal_has_position();
}
inline void AddDirectionalLightReq::clear_position() {
  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
}
inline const ::sapien::render_server::proto::Vec3& AddDirectionalLightReq::_internal_position() const {
  const ::sapien::render_server::proto::Vec3* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::sapien::render_server::proto::Vec3&>(
      ::sapien::render_server::proto::_Vec3_default_instance_);
}
inline const ::sapien::render_server::proto::Vec3& AddDirectionalLightReq::position() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddDirectionalLightReq.position)
  return _internal_position();
}
inline void AddDirectionalLightReq::unsafe_arena_set_allocated_position(
    ::sapien::render_server::proto::Vec3* position) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.render_server.proto.AddDirectionalLightReq.position)
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::release_position() {
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.position_;
  _impl_.position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:sapien.render_server.proto.AddDirectionalLightReq.position)
  
  ::sapien::render_server::proto::Vec3* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::_internal_mutable_position() {
  
  if (_impl_.position_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::render_server::proto::Vec3>(GetArenaForAllocation());
    _impl_.position_ = p;
  }
  return _impl_.position_;
}
inline ::sapien::render_server::proto::Vec3* AddDirectionalLightReq::mutable_position() {
  ::sapien::render_server::proto::Vec3* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.AddDirectionalLightReq.position)
  return _msg;
}
inline void AddDirectionalLightReq::set_allocated_position(::sapien::render_server::proto::Vec3* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.position_;
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(position);
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.position_ = position;
  // @@protoc_insertion_point(field_set_allocated:sapien.render_server.proto.AddDirectionalLightReq.position)
}

// float shadow_scale = 6;
inline void AddDirectionalLightReq::clear_shadow_scale() {
  _impl_.shadow_scale_ = 0;
}
inline float AddDirectionalLightReq::_internal_shadow_scale() const {
  return _impl_.shadow_scale_;
}
inline float AddDirectionalLightReq::shadow_scale() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddDirectionalLightReq.shadow_scale)
  return _internal_shadow_scale();
}
inline void AddDirectionalLightReq::_internal_set_shadow_scale(float value) {
  
  _impl_.shadow_scale_ = value;
}
inline void AddDirectionalLightReq::set_shadow_scale(float value) {
  _internal_set_shadow_scale(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddDirectionalLightReq.shadow_scale)
}

// float shadow_near = 7;
inline void AddDirectionalLightReq::clear_shadow_near() {
  _impl_.shadow_near_ = 0;
}
inline float AddDirectionalLightReq::_internal_shadow_near() const {
  return _impl_.shadow_near_;
}
inline float AddDirectionalLightReq::shadow_near() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddDirectionalLightReq.shadow_near)
  return _internal_shadow_near();
}
inline void AddDirectionalLightReq::_internal_set_shadow_near(float value) {
  
  _impl_.shadow_near_ = value;
}
inline void AddDirectionalLightReq::set_shadow_near(float value) {
  _internal_set_shadow_near(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddDirectionalLightReq.shadow_near)
}

// float shadow_far = 8;
inline void AddDirectionalLightReq::clear_shadow_far() {
  _impl_.shadow_far_ = 0;
}
inline float AddDirectionalLightReq::_internal_shadow_far() const {
  return _impl_.shadow_far_;
}
inline float AddDirectionalLightReq::shadow_far() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddDirectionalLightReq.shadow_far)
  return _internal_shadow_far();
}
inline void AddDirectionalLightReq::_internal_set_shadow_far(float value) {
  
  _impl_.shadow_far_ = value;
}
inline void AddDirectionalLightReq::set_shadow_far(float value) {
  _internal_set_shadow_far(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddDirectionalLightReq.shadow_far)
}

// int32 shadow_map_size = 9;
inline void AddDirectionalLightReq::clear_shadow_map_size() {
  _impl_.shadow_map_size_ = 0;
}
inline int32_t AddDirectionalLightReq::_internal_shadow_map_size() const {
  return _impl_.shadow_map_size_;
}
inline int32_t AddDirectionalLightReq::shadow_map_size() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.AddDirectionalLightReq.shadow_map_size)
  return _internal_shadow_map_size();
}
inline void AddDirectionalLightReq::_internal_set_shadow_map_size(int32_t value) {
  
  _impl_.shadow_map_size_ = value;
}
inline void AddDirectionalLightReq::set_shadow_map_size(int32_t value) {
  _internal_set_shadow_map_size(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.AddDirectionalLightReq.shadow_map_size)
}

// -------------------------------------------------------------------

// RemoveLightReq

// uint64 scene_id = 1;
inline void RemoveLightReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t RemoveLightReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t RemoveLightReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.RemoveLightReq.scene_id)
  return _internal_scene_id();
}
inline void RemoveLightReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void RemoveLightReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.RemoveLightReq.scene_id)
}

// uint64 light_id = 2;
inline void RemoveLightReq::clear_light_id() {
  _impl_.light_id_ = uint64_t{0u};
}
inline uint64_t RemoveLightReq::_internal_light_id() const {
  return _impl_.light_id_;
}
inline uint64_t RemoveLightReq::light_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.RemoveLightReq.light_id)
  return _internal_light_id();
}
inline void RemoveLightReq::_internal_set_light_id(uint64_t value) {
  
  _impl_.light_id_ = value;
}
inline void RemoveLightReq::set_light_id(uint64_t value) {
  _internal_set_light_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.RemoveLightReq.light_id)
}

// -------------------------------------------------------------------

// EntityOrderReq

// uint64 scene_id = 1;
inline void EntityOrderReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t EntityOrderReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t EntityOrderReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.EntityOrderReq.scene_id)
  return _internal_scene_id();
}
inline void EntityOrderReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void EntityOrderReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.EntityOrderReq.scene_id)
}

// repeated uint64 body_ids = 2 [packed = true];
inline int EntityOrderReq::_internal_body_ids_size() const {
  return _impl_.body_ids_.size();
}
inline int EntityOrderReq::body_ids_size() const {
  return _internal_body_ids_size();
}
inline void EntityOrderReq::clear_body_ids() {
  _impl_.body_ids_.Clear();
}
inline uint64_t EntityOrderReq::_internal_body_ids(int index) const {
  return _impl_.body_ids_.Get(index);
}
inline uint64_t EntityOrderReq::body_ids(int index) const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.EntityOrderReq.body_ids)
  return _internal_body_ids(index);
}
inline void EntityOrderReq::set_body_ids(int index, uint64_t value) {
  _impl_.body_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.EntityOrderReq.body_ids)
}
inline void EntityOrderReq::_internal_add_body_ids(uint64_t value) {
  _impl_.body_ids_.Add(value);
}
inline void EntityOrderReq::add_body_ids(uint64_t value) {
  _internal_add_body_ids(value);
  // @@protoc_insertion_point(field_add:sapien.render_server.proto.EntityOrderReq.body_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
EntityOrderReq::_internal_body_ids() const {
  return _impl_.body_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
EntityOrderReq::body_ids() const {
  // @@protoc_insertion_point(field_list:sapien.render_server.proto.EntityOrderReq.body_ids)
  return _internal_body_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
EntityOrderReq::_internal_mutable_body_ids() {
  return &_impl_.body_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
EntityOrderReq::mutable_body_ids() {
  // @@protoc_insertion_point(field_mutable_list:sapien.render_server.proto.EntityOrderReq.body_ids)
  return _internal_mutable_body_ids();
}

// repeated uint64 camera_ids = 3 [packed = true];
inline int EntityOrderReq::_internal_camera_ids_size() const {
  return _impl_.camera_ids_.size();
}
inline int EntityOrderReq::camera_ids_size() const {
  return _internal_camera_ids_size();
}
inline void EntityOrderReq::clear_camera_ids() {
  _impl_.camera_ids_.Clear();
}
inline uint64_t EntityOrderReq::_internal_camera_ids(int index) const {
  return _impl_.camera_ids_.Get(index);
}
inline uint64_t EntityOrderReq::camera_ids(int index) const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.EntityOrderReq.camera_ids)
  return _internal_camera_ids(index);
}
inline void EntityOrderReq::set_camera_ids(int index, uint64_t value) {
  _impl_.camera_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.EntityOrderReq.camera_ids)
}
inline void EntityOrderReq::_internal_add_camera_ids(uint64_t value) {
  _impl_.camera_ids_.Add(value);
}
inline void EntityOrderReq::add_camera_ids(uint64_t value) {
  _internal_add_camera_ids(value);
  // @@protoc_insertion_point(field_add:sapien.render_server.proto.EntityOrderReq.camera_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
EntityOrderReq::_internal_camera_ids() const {
  return _impl_.camera_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
EntityOrderReq::camera_ids() const {
  // @@protoc_insertion_point(field_list:sapien.render_server.proto.EntityOrderReq.camera_ids)
  return _internal_camera_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
EntityOrderReq::_internal_mutable_camera_ids() {
  return &_impl_.camera_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
EntityOrderReq::mutable_camera_ids() {
  // @@protoc_insertion_point(field_mutable_list:sapien.render_server.proto.EntityOrderReq.camera_ids)
  return _internal_mutable_camera_ids();
}

// -------------------------------------------------------------------

// UpdateRenderReq

// uint64 scene_id = 1;
inline void UpdateRenderReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t UpdateRenderReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t UpdateRenderReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.UpdateRenderReq.scene_id)
  return _internal_scene_id();
}
inline void UpdateRenderReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void UpdateRenderReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.UpdateRenderReq.scene_id)
}

// repeated .sapien.render_server.proto.Pose body_poses = 2;
inline int UpdateRenderReq::_internal_body_poses_size() const {
  return _impl_.body_poses_.size();
}
inline int UpdateRenderReq::body_poses_size() const {
  return _internal_body_poses_size();
}
inline void UpdateRenderReq::clear_body_poses() {
  _impl_.body_poses_.Clear();
}
inline ::sapien::render_server::proto::Pose* UpdateRenderReq::mutable_body_poses(int index) {
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.UpdateRenderReq.body_poses)
  return _impl_.body_poses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >*
UpdateRenderReq::mutable_body_poses() {
  // @@protoc_insertion_point(field_mutable_list:sapien.render_server.proto.UpdateRenderReq.body_poses)
  return &_impl_.body_poses_;
}
inline const ::sapien::render_server::proto::Pose& UpdateRenderReq::_internal_body_poses(int index) const {
  return _impl_.body_poses_.Get(index);
}
inline const ::sapien::render_server::proto::Pose& UpdateRenderReq::body_poses(int index) const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.UpdateRenderReq.body_poses)
  return _internal_body_poses(index);
}
inline ::sapien::render_server::proto::Pose* UpdateRenderReq::_internal_add_body_poses() {
  return _impl_.body_poses_.Add();
}
inline ::sapien::render_server::proto::Pose* UpdateRenderReq::add_body_poses() {
  ::sapien::render_server::proto::Pose* _add = _internal_add_body_poses();
  // @@protoc_insertion_point(field_add:sapien.render_server.proto.UpdateRenderReq.body_poses)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >&
UpdateRenderReq::body_poses() const {
  // @@protoc_insertion_point(field_list:sapien.render_server.proto.UpdateRenderReq.body_poses)
  return _impl_.body_poses_;
}

// repeated .sapien.render_server.proto.Pose camera_poses = 3;
inline int UpdateRenderReq::_internal_camera_poses_size() const {
  return _impl_.camera_poses_.size();
}
inline int UpdateRenderReq::camera_poses_size() const {
  return _internal_camera_poses_size();
}
inline void UpdateRenderReq::clear_camera_poses() {
  _impl_.camera_poses_.Clear();
}
inline ::sapien::render_server::proto::Pose* UpdateRenderReq::mutable_camera_poses(int index) {
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.UpdateRenderReq.camera_poses)
  return _impl_.camera_poses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >*
UpdateRenderReq::mutable_camera_poses() {
  // @@protoc_insertion_point(field_mutable_list:sapien.render_server.proto.UpdateRenderReq.camera_poses)
  return &_impl_.camera_poses_;
}
inline const ::sapien::render_server::proto::Pose& UpdateRenderReq::_internal_camera_poses(int index) const {
  return _impl_.camera_poses_.Get(index);
}
inline const ::sapien::render_server::proto::Pose& UpdateRenderReq::camera_poses(int index) const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.UpdateRenderReq.camera_poses)
  return _internal_camera_poses(index);
}
inline ::sapien::render_server::proto::Pose* UpdateRenderReq::_internal_add_camera_poses() {
  return _impl_.camera_poses_.Add();
}
inline ::sapien::render_server::proto::Pose* UpdateRenderReq::add_camera_poses() {
  ::sapien::render_server::proto::Pose* _add = _internal_add_camera_poses();
  // @@protoc_insertion_point(field_add:sapien.render_server.proto.UpdateRenderReq.camera_poses)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >&
UpdateRenderReq::camera_poses() const {
  // @@protoc_insertion_point(field_list:sapien.render_server.proto.UpdateRenderReq.camera_poses)
  return _impl_.camera_poses_;
}

// -------------------------------------------------------------------

// BodyIdReq

// uint64 scene_id = 1;
inline void BodyIdReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t BodyIdReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t BodyIdReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyIdReq.scene_id)
  return _internal_scene_id();
}
inline void BodyIdReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void BodyIdReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyIdReq.scene_id)
}

// uint64 body_id = 2;
inline void BodyIdReq::clear_body_id() {
  _impl_.body_id_ = uint64_t{0u};
}
inline uint64_t BodyIdReq::_internal_body_id() const {
  return _impl_.body_id_;
}
inline uint64_t BodyIdReq::body_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyIdReq.body_id)
  return _internal_body_id();
}
inline void BodyIdReq::_internal_set_body_id(uint64_t value) {
  
  _impl_.body_id_ = value;
}
inline void BodyIdReq::set_body_id(uint64_t value) {
  _internal_set_body_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyIdReq.body_id)
}

// uint32 id = 3;
inline void BodyIdReq::clear_id() {
  _impl_.id_ = 0u;
}
inline uint32_t BodyIdReq::_internal_id() const {
  return _impl_.id_;
}
inline uint32_t BodyIdReq::id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyIdReq.id)
  return _internal_id();
}
inline void BodyIdReq::_internal_set_id(uint32_t value) {
  
  _impl_.id_ = value;
}
inline void BodyIdReq::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyIdReq.id)
}

// -------------------------------------------------------------------

// BodyUint32Req

// uint64 scene_id = 1;
inline void BodyUint32Req::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t BodyUint32Req::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t BodyUint32Req::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyUint32Req.scene_id)
  return _internal_scene_id();
}
inline void BodyUint32Req::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void BodyUint32Req::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyUint32Req.scene_id)
}

// uint64 body_id = 2;
inline void BodyUint32Req::clear_body_id() {
  _impl_.body_id_ = uint64_t{0u};
}
inline uint64_t BodyUint32Req::_internal_body_id() const {
  return _impl_.body_id_;
}
inline uint64_t BodyUint32Req::body_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyUint32Req.body_id)
  return _internal_body_id();
}
inline void BodyUint32Req::_internal_set_body_id(uint64_t value) {
  
  _impl_.body_id_ = value;
}
inline void BodyUint32Req::set_body_id(uint64_t value) {
  _internal_set_body_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyUint32Req.body_id)
}

// uint32 id = 3;
inline void BodyUint32Req::clear_id() {
  _impl_.id_ = 0u;
}
inline uint32_t BodyUint32Req::_internal_id() const {
  return _impl_.id_;
}
inline uint32_t BodyUint32Req::id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyUint32Req.id)
  return _internal_id();
}
inline void BodyUint32Req::_internal_set_id(uint32_t value) {
  
  _impl_.id_ = value;
}
inline void BodyUint32Req::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyUint32Req.id)
}

// -------------------------------------------------------------------

// BodyFloat32Req

// uint64 scene_id = 1;
inline void BodyFloat32Req::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t BodyFloat32Req::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t BodyFloat32Req::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyFloat32Req.scene_id)
  return _internal_scene_id();
}
inline void BodyFloat32Req::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void BodyFloat32Req::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyFloat32Req.scene_id)
}

// uint64 body_id = 2;
inline void BodyFloat32Req::clear_body_id() {
  _impl_.body_id_ = uint64_t{0u};
}
inline uint64_t BodyFloat32Req::_internal_body_id() const {
  return _impl_.body_id_;
}
inline uint64_t BodyFloat32Req::body_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyFloat32Req.body_id)
  return _internal_body_id();
}
inline void BodyFloat32Req::_internal_set_body_id(uint64_t value) {
  
  _impl_.body_id_ = value;
}
inline void BodyFloat32Req::set_body_id(uint64_t value) {
  _internal_set_body_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyFloat32Req.body_id)
}

// float value = 3;
inline void BodyFloat32Req::clear_value() {
  _impl_.value_ = 0;
}
inline float BodyFloat32Req::_internal_value() const {
  return _impl_.value_;
}
inline float BodyFloat32Req::value() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyFloat32Req.value)
  return _internal_value();
}
inline void BodyFloat32Req::_internal_set_value(float value) {
  
  _impl_.value_ = value;
}
inline void BodyFloat32Req::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyFloat32Req.value)
}

// -------------------------------------------------------------------

// TakePictureReq

// uint64 scene_id = 1;
inline void TakePictureReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t TakePictureReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t TakePictureReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.TakePictureReq.scene_id)
  return _internal_scene_id();
}
inline void TakePictureReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void TakePictureReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.TakePictureReq.scene_id)
}

// uint64 camera_id = 2;
inline void TakePictureReq::clear_camera_id() {
  _impl_.camera_id_ = uint64_t{0u};
}
inline uint64_t TakePictureReq::_internal_camera_id() const {
  return _impl_.camera_id_;
}
inline uint64_t TakePictureReq::camera_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.TakePictureReq.camera_id)
  return _internal_camera_id();
}
inline void TakePictureReq::_internal_set_camera_id(uint64_t value) {
  
  _impl_.camera_id_ = value;
}
inline void TakePictureReq::set_camera_id(uint64_t value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.TakePictureReq.camera_id)
}

// -------------------------------------------------------------------

// UpdateRenderAndTakePicturesReq

// uint64 scene_id = 1;
inline void UpdateRenderAndTakePicturesReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t UpdateRenderAndTakePicturesReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t UpdateRenderAndTakePicturesReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.scene_id)
  return _internal_scene_id();
}
inline void UpdateRenderAndTakePicturesReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void UpdateRenderAndTakePicturesReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.scene_id)
}

// repeated .sapien.render_server.proto.Pose body_poses = 2;
inline int UpdateRenderAndTakePicturesReq::_internal_body_poses_size() const {
  return _impl_.body_poses_.size();
}
inline int UpdateRenderAndTakePicturesReq::body_poses_size() const {
  return _internal_body_poses_size();
}
inline void UpdateRenderAndTakePicturesReq::clear_body_poses() {
  _impl_.body_poses_.Clear();
}
inline ::sapien::render_server::proto::Pose* UpdateRenderAndTakePicturesReq::mutable_body_poses(int index) {
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return _impl_.body_poses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >*
UpdateRenderAndTakePicturesReq::mutable_body_poses() {
  // @@protoc_insertion_point(field_mutable_list:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return &_impl_.body_poses_;
}
inline const ::sapien::render_server::proto::Pose& UpdateRenderAndTakePicturesReq::_internal_body_poses(int index) const {
  return _impl_.body_poses_.Get(index);
}
inline const ::sapien::render_server::proto::Pose& UpdateRenderAndTakePicturesReq::body_poses(int index) const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return _internal_body_poses(index);
}
inline ::sapien::render_server::proto::Pose* UpdateRenderAndTakePicturesReq::_internal_add_body_poses() {
  return _impl_.body_poses_.Add();
}
inline ::sapien::render_server::proto::Pose* UpdateRenderAndTakePicturesReq::add_body_poses() {
  ::sapien::render_server::proto::Pose* _add = _internal_add_body_poses();
  // @@protoc_insertion_point(field_add:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >&
UpdateRenderAndTakePicturesReq::body_poses() const {
  // @@protoc_insertion_point(field_list:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return _impl_.body_poses_;
}

// repeated .sapien.render_server.proto.Pose camera_poses = 3;
inline int UpdateRenderAndTakePicturesReq::_internal_camera_poses_size() const {
  return _impl_.camera_poses_.size();
}
inline int UpdateRenderAndTakePicturesReq::camera_poses_size() const {
  return _internal_camera_poses_size();
}
inline void UpdateRenderAndTakePicturesReq::clear_camera_poses() {
  _impl_.camera_poses_.Clear();
}
inline ::sapien::render_server::proto::Pose* UpdateRenderAndTakePicturesReq::mutable_camera_poses(int index) {
  // @@protoc_insertion_point(field_mutable:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return _impl_.camera_poses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >*
UpdateRenderAndTakePicturesReq::mutable_camera_poses() {
  // @@protoc_insertion_point(field_mutable_list:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return &_impl_.camera_poses_;
}
inline const ::sapien::render_server::proto::Pose& UpdateRenderAndTakePicturesReq::_internal_camera_poses(int index) const {
  return _impl_.camera_poses_.Get(index);
}
inline const ::sapien::render_server::proto::Pose& UpdateRenderAndTakePicturesReq::camera_poses(int index) const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return _internal_camera_poses(index);
}
inline ::sapien::render_server::proto::Pose* UpdateRenderAndTakePicturesReq::_internal_add_camera_poses() {
  return _impl_.camera_poses_.Add();
}
inline ::sapien::render_server::proto::Pose* UpdateRenderAndTakePicturesReq::add_camera_poses() {
  ::sapien::render_server::proto::Pose* _add = _internal_add_camera_poses();
  // @@protoc_insertion_point(field_add:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::render_server::proto::Pose >&
UpdateRenderAndTakePicturesReq::camera_poses() const {
  // @@protoc_insertion_point(field_list:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return _impl_.camera_poses_;
}

// repeated uint64 camera_ids = 4 [packed = true];
inline int UpdateRenderAndTakePicturesReq::_internal_camera_ids_size() const {
  return _impl_.camera_ids_.size();
}
inline int UpdateRenderAndTakePicturesReq::camera_ids_size() const {
  return _internal_camera_ids_size();
}
inline void UpdateRenderAndTakePicturesReq::clear_camera_ids() {
  _impl_.camera_ids_.Clear();
}
inline uint64_t UpdateRenderAndTakePicturesReq::_internal_camera_ids(int index) const {
  return _impl_.camera_ids_.Get(index);
}
inline uint64_t UpdateRenderAndTakePicturesReq::camera_ids(int index) const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
  return _internal_camera_ids(index);
}
inline void UpdateRenderAndTakePicturesReq::set_camera_ids(int index, uint64_t value) {
  _impl_.camera_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
}
inline void UpdateRenderAndTakePicturesReq::_internal_add_camera_ids(uint64_t value) {
  _impl_.camera_ids_.Add(value);
}
inline void UpdateRenderAndTakePicturesReq::add_camera_ids(uint64_t value) {
  _internal_add_camera_ids(value);
  // @@protoc_insertion_point(field_add:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
UpdateRenderAndTakePicturesReq::_internal_camera_ids() const {
  return _impl_.camera_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
UpdateRenderAndTakePicturesReq::camera_ids() const {
  // @@protoc_insertion_point(field_list:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
  return _internal_camera_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
UpdateRenderAndTakePicturesReq::_internal_mutable_camera_ids() {
  return &_impl_.camera_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
UpdateRenderAndTakePicturesReq::mutable_camera_ids() {
  // @@protoc_insertion_point(field_mutable_list:sapien.render_server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
  return _internal_mutable_camera_ids();
}

// -------------------------------------------------------------------

// CameraParamsReq

// uint64 scene_id = 1;
inline void CameraParamsReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t CameraParamsReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t CameraParamsReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.CameraParamsReq.scene_id)
  return _internal_scene_id();
}
inline void CameraParamsReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void CameraParamsReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.CameraParamsReq.scene_id)
}

// uint64 camera_id = 2;
inline void CameraParamsReq::clear_camera_id() {
  _impl_.camera_id_ = uint64_t{0u};
}
inline uint64_t CameraParamsReq::_internal_camera_id() const {
  return _impl_.camera_id_;
}
inline uint64_t CameraParamsReq::camera_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.CameraParamsReq.camera_id)
  return _internal_camera_id();
}
inline void CameraParamsReq::_internal_set_camera_id(uint64_t value) {
  
  _impl_.camera_id_ = value;
}
inline void CameraParamsReq::set_camera_id(uint64_t value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.CameraParamsReq.camera_id)
}

// float near = 3;
inline void CameraParamsReq::clear_near() {
  _impl_.near_ = 0;
}
inline float CameraParamsReq::_internal_near() const {
  return _impl_.near_;
}
inline float CameraParamsReq::near() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.CameraParamsReq.near)
  return _internal_near();
}
inline void CameraParamsReq::_internal_set_near(float value) {
  
  _impl_.near_ = value;
}
inline void CameraParamsReq::set_near(float value) {
  _internal_set_near(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.CameraParamsReq.near)
}

// float far = 4;
inline void CameraParamsReq::clear_far() {
  _impl_.far_ = 0;
}
inline float CameraParamsReq::_internal_far() const {
  return _impl_.far_;
}
inline float CameraParamsReq::far() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.CameraParamsReq.far)
  return _internal_far();
}
inline void CameraParamsReq::_internal_set_far(float value) {
  
  _impl_.far_ = value;
}
inline void CameraParamsReq::set_far(float value) {
  _internal_set_far(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.CameraParamsReq.far)
}

// float fx = 5;
inline void CameraParamsReq::clear_fx() {
  _impl_.fx_ = 0;
}
inline float CameraParamsReq::_internal_fx() const {
  return _impl_.fx_;
}
inline float CameraParamsReq::fx() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.CameraParamsReq.fx)
  return _internal_fx();
}
inline void CameraParamsReq::_internal_set_fx(float value) {
  
  _impl_.fx_ = value;
}
inline void CameraParamsReq::set_fx(float value) {
  _internal_set_fx(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.CameraParamsReq.fx)
}

// float fy = 6;
inline void CameraParamsReq::clear_fy() {
  _impl_.fy_ = 0;
}
inline float CameraParamsReq::_internal_fy() const {
  return _impl_.fy_;
}
inline float CameraParamsReq::fy() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.CameraParamsReq.fy)
  return _internal_fy();
}
inline void CameraParamsReq::_internal_set_fy(float value) {
  
  _impl_.fy_ = value;
}
inline void CameraParamsReq::set_fy(float value) {
  _internal_set_fy(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.CameraParamsReq.fy)
}

// float cx = 7;
inline void CameraParamsReq::clear_cx() {
  _impl_.cx_ = 0;
}
inline float CameraParamsReq::_internal_cx() const {
  return _impl_.cx_;
}
inline float CameraParamsReq::cx() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.CameraParamsReq.cx)
  return _internal_cx();
}
inline void CameraParamsReq::_internal_set_cx(float value) {
  
  _impl_.cx_ = value;
}
inline void CameraParamsReq::set_cx(float value) {
  _internal_set_cx(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.CameraParamsReq.cx)
}

// float cy = 8;
inline void CameraParamsReq::clear_cy() {
  _impl_.cy_ = 0;
}
inline float CameraParamsReq::_internal_cy() const {
  return _impl_.cy_;
}
inline float CameraParamsReq::cy() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.CameraParamsReq.cy)
  return _internal_cy();
}
inline void CameraParamsReq::_internal_set_cy(float value) {
  
  _impl_.cy_ = value;
}
inline void CameraParamsReq::set_cy(float value) {
  _internal_set_cy(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.CameraParamsReq.cy)
}

// float skew = 9;
inline void CameraParamsReq::clear_skew() {
  _impl_.skew_ = 0;
}
inline float CameraParamsReq::_internal_skew() const {
  return _impl_.skew_;
}
inline float CameraParamsReq::skew() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.CameraParamsReq.skew)
  return _internal_skew();
}
inline void CameraParamsReq::_internal_set_skew(float value) {
  
  _impl_.skew_ = value;
}
inline void CameraParamsReq::set_skew(float value) {
  _internal_set_skew(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.CameraParamsReq.skew)
}

// -------------------------------------------------------------------

// BodyReq

// uint64 scene_id = 1;
inline void BodyReq::clear_scene_id() {
  _impl_.scene_id_ = uint64_t{0u};
}
inline uint64_t BodyReq::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint64_t BodyReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyReq.scene_id)
  return _internal_scene_id();
}
inline void BodyReq::_internal_set_scene_id(uint64_t value) {
  
  _impl_.scene_id_ = value;
}
inline void BodyReq::set_scene_id(uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyReq.scene_id)
}

// uint64 body_id = 2;
inline void BodyReq::clear_body_id() {
  _impl_.body_id_ = uint64_t{0u};
}
inline uint64_t BodyReq::_internal_body_id() const {
  return _impl_.body_id_;
}
inline uint64_t BodyReq::body_id() const {
  // @@protoc_insertion_point(field_get:sapien.render_server.proto.BodyReq.body_id)
  return _internal_body_id();
}
inline void BodyReq::_internal_set_body_id(uint64_t value) {
  
  _impl_.body_id_ = value;
}
inline void BodyReq::set_body_id(uint64_t value) {
  _internal_set_body_id(value);
  // @@protoc_insertion_point(field_set:sapien.render_server.proto.BodyReq.body_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace render_server
}  // namespace sapien

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::sapien::render_server::proto::PrimitiveType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sapien::render_server::proto::PrimitiveType>() {
  return ::sapien::render_server::proto::PrimitiveType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_render_5fserver_2eproto
